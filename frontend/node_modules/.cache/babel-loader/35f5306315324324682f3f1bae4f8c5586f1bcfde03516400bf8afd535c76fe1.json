{"ast":null,"code":"var _jsxFileName = \"/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport HeaderComponent from \"../ui/HeaderComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n_c = Wrapper;\nconst ImgTagBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\nconst BackgroundImg = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"${process.env.PUBLIC_URL}/background.JPG\");\n  background-size: cover;\n  background-position: center;\n  opacity: 0.5;\n  color: white;\n  font-family: \"Pretendard-ExtraBold\";\n  font-size: 60px;\n  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\n_c2 = TagContainer;\nconst CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\n_c3 = CategoryContainer;\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\n_c4 = Tags;\nconst BlogListPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 필터링 초기화\n  const resetFilters = () => {\n    setSelectedTags([]);\n    setSelectedCategory(\"\");\n    setSearchParams({});\n  };\n\n  // 날짜 정렬\n  const sortPostsByDate = posts => {\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // 페이지네이션\n\n  // 초기 포스트 페이지 로딩\n  useEffect(() => {\n    fetch(\"http://localhost:8000/posts/\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n      setPosts(sortedPosts);\n      // setPosts(data);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\n  useEffect(() => {\n    // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\n    const tagsFromURL = searchParams.get(\"tags\");\n    const categoryFromURL = searchParams.get(\"cat\");\n\n    // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\n    const tagsArray = tagsFromURL ? tagsFromURL.split(\"&\") : [];\n    const category = categoryFromURL ? categoryFromURL : \"\";\n\n    // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\n    setSelectedTags(tagsArray);\n    setSelectedCategory(category);\n  }, [searchParams]); // searchParams 변화 감지\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const handlePostClick = postId => {\n    navigate(`/posts/${postId}`);\n  };\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 태그 다중선택 처리\n  const handleTagChange = tag => {\n    const newSelectedTags = selectedTags.includes(tag) ? selectedTags.filter(t => t !== tag) : [...selectedTags, tag];\n    setSelectedTags(newSelectedTags);\n    setSearchParams({\n      tags: newSelectedTags.join(\"&\"),\n      cat: selectedCategory\n    });\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = category => {\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\n    const newCategory = isDeselecting ? \"\" : category;\n    setSelectedCategory(newCategory);\n    if (newCategory === \"\") {\n      setSearchParams(selectedTags.length > 0 ? {\n        tags: selectedTags.join(\"&\")\n      } : {});\n    } else {\n      setSearchParams({\n        tags: selectedTags.join(\"&\"),\n        cat: newCategory\n      });\n    }\n  };\n\n  // posts Data 필터링\n  const filteredPosts = posts.filter(post => {\n    const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\n    const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\n    return hasSelectedTags && hasSelectedCategory;\n  });\n\n  // const allTags = posts.reduce((acc, post) => [...acc, ...post.tags], []);\n  // const uniqueTags = [...new Set(allTags)];\n\n  const uniqueTags = [...new Set(posts.flatMap(post => post.tags))];\n  const uniqueCategories = [...new Set(posts.map(post => post.categories))];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetFilters,\n      style: {\n        cursor: \"pointer\"\n      },\n      children: \"\\uBE14\\uB85C\\uADF8 \\uBA54\\uC778/\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n      children: uniqueTags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: () => handleTagChange(tag),\n        style: {\n          marginRight: \"10px\",\n          cursor: \"pointer\",\n          gap: \"10px\"\n        },\n        children: [\"#\", tag, selectedTags.includes(tag) ? \" (Selected)\" : \"\"]\n      }, tagIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: uniqueCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: () => handleCategoryChange(category),\n        style: {\n          marginRight: \"10px\",\n          cursor: \"pointer\",\n          gap: \"10px\"\n        },\n        children: selectedCategory === category ? `${category} (Selected)` : category\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handlePostClick(post._id),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            color: \"gray\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profileImagePath,\n            alt: \"Author's profile\",\n            style: {\n              width: \"30px\",\n              height: \"30px\",\n              borderRadius: \"50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 10px\",\n              fontWeight: \"bold\",\n              color: \"lightgray\"\n            },\n            children: new Date(post.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.outline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n          onClick: event => handleTagClick(tag, event),\n          style: {\n            marginRight: \"10px\",\n            cursor: \"pointer\",\n            gap: \"10px\"\n          },\n          children: [\"#\", tag]\n        }, tagIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogListPage, \"zjCaCHpgWTvDUsDgqk+dlbSmQuo=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c5 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"TagContainer\");\n$RefreshReg$(_c3, \"CategoryContainer\");\n$RefreshReg$(_c4, \"Tags\");\n$RefreshReg$(_c5, \"BlogListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","styled","createGlobalStyle","HeaderComponent","jsxDEV","_jsxDEV","Wrapper","div","_c","ImgTagBox","BackgroundImg","process","env","PUBLIC_URL","TagContainer","_c2","CategoryContainer","_c3","Tags","span","_c4","BlogListPage","_s","loading","setLoading","error","setError","posts","setPosts","selectedTags","setSelectedTags","selectedCategory","setSelectedCategory","searchParams","setSearchParams","navigate","resetFilters","sortPostsByDate","sort","a","b","Date","createdAt","fetch","then","response","ok","Error","json","data","sortedPosts","catch","message","finally","tagsFromURL","get","categoryFromURL","tagsArray","split","category","handlePostClick","postId","handleTagClick","tag","event","stopPropagation","handleTagChange","newSelectedTags","includes","filter","t","tags","join","cat","handleCategoryChange","isDeselecting","newCategory","length","filteredPosts","post","hasSelectedTags","every","hasSelectedCategory","categories","uniqueTags","Set","flatMap","uniqueCategories","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","tagIndex","marginRight","gap","index","_id","title","display","alignItems","fontSize","fontWeight","color","author","src","profileImagePath","alt","width","height","borderRadius","margin","toLocaleDateString","outline","_c5","$RefreshReg$"],"sources":["/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nimport HeaderComponent from \"../ui/HeaderComponent\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n\nconst ImgTagBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\n\nconst BackgroundImg = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"${process.env.PUBLIC_URL}/background.JPG\");\n  background-size: cover;\n  background-position: center;\n  opacity: 0.5;\n  color: white;\n  font-family: \"Pretendard-ExtraBold\";\n  font-size: 60px;\n  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n\nconst TagContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\n\nconst CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\n\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\n\nconst BlogListPage = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 필터링 초기화\n  const resetFilters = () => {\n    setSelectedTags([]);\n    setSelectedCategory(\"\");\n    setSearchParams({});\n  };\n\n  // 날짜 정렬\n  const sortPostsByDate = (posts) => {\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // 페이지네이션\n\n  // 초기 포스트 페이지 로딩\n  useEffect(() => {\n    fetch(\"http://localhost:8000/posts/\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch posts\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n        setPosts(sortedPosts);\n        // setPosts(data);\n      })\n      .catch((error) => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\n  useEffect(() => {\n    // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\n    const tagsFromURL = searchParams.get(\"tags\");\n    const categoryFromURL = searchParams.get(\"cat\");\n\n    // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\n    const tagsArray = tagsFromURL ? tagsFromURL.split(\"&\") : [];\n    const category = categoryFromURL ? categoryFromURL : \"\";\n\n    // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\n    setSelectedTags(tagsArray);\n    setSelectedCategory(category);\n  }, [searchParams]); // searchParams 변화 감지\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const handlePostClick = (postId) => {\n    navigate(`/posts/${postId}`);\n  };\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 태그 다중선택 처리\n  const handleTagChange = (tag) => {\n    const newSelectedTags = selectedTags.includes(tag)\n      ? selectedTags.filter((t) => t !== tag)\n      : [...selectedTags, tag];\n    setSelectedTags(newSelectedTags);\n    setSearchParams({ tags: newSelectedTags.join(\"&\"), cat: selectedCategory });\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = (category) => {\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\n    const newCategory = isDeselecting ? \"\" : category;\n    setSelectedCategory(newCategory);\n\n    if (newCategory === \"\") {\n      setSearchParams(\n        selectedTags.length > 0 ? { tags: selectedTags.join(\"&\") } : {}\n      );\n    } else {\n      setSearchParams({ tags: selectedTags.join(\"&\"), cat: newCategory });\n    }\n  };\n\n  // posts Data 필터링\n  const filteredPosts = posts.filter((post) => {\n    const hasSelectedTags =\n      selectedTags.length === 0 ||\n      selectedTags.every((tag) => post.tags.includes(tag));\n    const hasSelectedCategory =\n      !selectedCategory || post.categories.includes(selectedCategory);\n    return hasSelectedTags && hasSelectedCategory;\n  });\n\n  // const allTags = posts.reduce((acc, post) => [...acc, ...post.tags], []);\n  // const uniqueTags = [...new Set(allTags)];\n\n  const uniqueTags = [...new Set(posts.flatMap((post) => post.tags))];\n  const uniqueCategories = [...new Set(posts.map((post) => post.categories))];\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <Wrapper>\n      <h1 onClick={resetFilters} style={{ cursor: \"pointer\" }}>\n        블로그 메인/리스트 페이지\n      </h1>\n\n      {/* 태그 렌더링 - 다중 선택 */}\n      <TagContainer>\n        {uniqueTags.map((tag, tagIndex) => (\n          <Tags\n            key={tagIndex}\n            onClick={() => handleTagChange(tag)}\n            style={{ marginRight: \"10px\", cursor: \"pointer\", gap: \"10px\" }}\n          >\n            #{tag}\n            {selectedTags.includes(tag) ? \" (Selected)\" : \"\"}\n          </Tags>\n        ))}\n      </TagContainer>\n\n      {/* 카테고리 버튼 렌더링 */}\n      <CategoryContainer>\n        {uniqueCategories.map((category, index) => (\n          <Tags\n            key={index}\n            onClick={() => handleCategoryChange(category)}\n            style={{ marginRight: \"10px\", cursor: \"pointer\", gap: \"10px\" }}\n          >\n            {selectedCategory === category\n              ? `${category} (Selected)`\n              : category}\n          </Tags>\n        ))}\n      </CategoryContainer>\n\n      {/* 포스트 목록 렌더링 및 각종 click 이동 이벤트 */}\n      <div>\n        {filteredPosts.map((post, index) => (\n          <div key={index}>\n            {/* 제목 클릭 시 포스트로 이동 */}\n            <h2\n              onClick={() => handlePostClick(post._id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              {post.title}\n            </h2>\n\n            {/* 작성자, 프사, 날짜, 아웃라인 */}\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                color: \"gray\",\n              }}\n            >\n              <span>{post.author}</span>\n              <img\n                src={post.profileImagePath}\n                alt=\"Author's profile\"\n                style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\n              />\n              <span\n                style={{\n                  margin: \"0 10px\",\n                  fontWeight: \"bold\",\n                  color: \"lightgray\",\n                }}\n              >\n                {new Date(post.createdAt).toLocaleDateString()}\n              </span>\n            </div>\n\n            <h4>{post.outline}</h4>\n\n            {/* 태그 및 단일 필터링 */}\n            {post.tags.map((tag, tagIndex) => (\n              <Tags\n                key={tagIndex}\n                onClick={(event) => handleTagClick(tag, event)}\n                style={{ marginRight: \"10px\", cursor: \"pointer\", gap: \"10px\" }}\n              >\n                #{tag}\n              </Tags>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default BlogListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}