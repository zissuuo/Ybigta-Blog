{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\2024-1 YBIGTA\\\\Ybigta_BLOG\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport HeaderComponent from \"../ui/HeaderComponent\";\nimport BottomComponent from \"../ui/BottomComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c = Wrapper;\nconst ImgTagBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\n_c2 = ImgTagBox;\nconst BackgroundImg = styled.div`\n  width: 100%;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-image: url(\"${process.env.PUBLIC_URL}/background.JPG\");\n  background-size: cover;\n  background-position: center;\n  opacity: 0.5;\n  color: white;\n  font-family: \"Pretendard-ExtraBold\";\n  font-size: 60px;\n  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n_c3 = BackgroundImg;\nconst PostCategoryContainer = styled.div`\n  display: flex;\n  padding-top: 30px;\n  padding-left: 90px;\n  padding-right: 90px;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 50px;\n  justify-content: center; /* 추가: 자식 요소들이 중앙에 위치하도록 함 */\n`;\n_c4 = PostCategoryContainer;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  width: 600px;\n  gap: 15px 7px;\n`;\n_c5 = TagContainer;\nconst CategoryContainer = styled.div`\n  display: flex;\n  min-width: 300px; /* 최소 너비 설정 */\n  max-width: 300px; /* 최대 너비 설정 */\n  flex-direction: column;\n  gap: 9px;\n`;\n_c6 = CategoryContainer;\nconst Tags = styled.span`\n  padding-left: 12px;\n  padding-right: 12px;\n  display: flex;\n  height: 30px;\n  cursor: pointer;\n  background-color: #ebebeb;\n  color: ${props => props.isSelected ? \"#3b82f6\" : \"#666666\"}; /* 조건부 색상 적용 */\n  text-align: center;\n  font-family: \"Pretendard-SemiBold\";\n  font-size: 13px;\n  justify-content: center;\n  align-items: center; /* 이 줄을 추가하세요 */\n  border-radius: 30px;\n  transition: color 0.1s ease;\n  &:hover {\n    color: #3b82f6;\n  }\n`;\n_c7 = Tags;\nconst SearchForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n`;\n_c8 = SearchForm;\nconst SearchInput = styled.input`\n  height: 30px;\n  outline: none;\n  padding-left: 10px;\n  border-radius: 15px;\n  border: none;\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n  font-family: \"Pretendard-Medium\";\n`;\n_c9 = SearchInput;\nconst SearchButton = styled.button`\n  padding: 5px 10px;\n  border-radius: 15px;\n  border: none;\n  background-color: #ebebeb;\n  color: #666666;\n  cursor: pointer;\n  margin-left: 10px;\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n_c10 = SearchButton;\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 750px; /* 최소 너비 설정 */\n  max-width: 750px; /* 최대 너비 설정 */\n  gap: 16px;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n_c11 = PostWrapper;\nconst PostContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 750px;\n  gap: 16px;\n  padding-bottom: 40px;\n  margin-bottom: 20px;\n  ${props => !props.isLast && css`\n      border-bottom: 1px solid #d4d4d4;\n    `}\n`;\n_c12 = PostContainer;\nconst InnerTagContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c13 = InnerTagContainer;\nconst PostTitle = styled.span`\n  font-family: \"Pretendard-ExtraBold\";\n  font-size: 23px;\n  cursor: pointer;\n  transition: color 0.1s ease;\n  &:hover {\n    color: #666666;\n  }\n`;\n_c14 = PostTitle;\nconst Category = styled.span`\n  font-family: \"Pretendard-Medium\";\n  cursor: pointer;\n  color: ${props => props.isSelected ? \"#3b82f6\" : \"#252a2f\"};\n  transition: color 0.1s ease;\n  &:hover {\n    color: #3b82f6;\n  }\n`;\n_c15 = Category;\nconst BlogListPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 필터링 초기화\n  const resetFilters = () => {\n    setSelectedTags([]);\n    setSelectedCategory(\"\");\n    setSearchParams({});\n  };\n\n  // 날짜 정렬\n  const sortPostsByDate = posts => {\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // 코드블록 마커 제거 함수\n  const removeCodeBlockMarkers = text => {\n    // 코드블록 시작과 끝 표시만 제거 (언어 표시 포함)\n    return text.replace(/```[\\w+\\s]*\\n/g, '').replace(/\\n```/g, '');\n  };\n\n  // 검색 실행 함수\n  const executeSearch = e => {\n    e.preventDefault(); // 폼 기본 제출 이벤트 방지\n\n    setSearchParams({\n      ...Object.fromEntries(searchParams.entries()),\n      search: searchQuery\n    });\n  };\n\n  // 검색어 입력 처리 저장\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value); // 입력된 검색어를 로컬 상태로 저장\n  };\n\n  // 초기 포스트 페이지 로딩\n  useEffect(() => {\n    fetch(\"http://localhost:8000/posts/\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      return response.json();\n    }).then(data => {\n      const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n      setPosts(sortedPosts);\n      // setPosts(data);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\n  useEffect(() => {\n    // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\n    const tagsFromURL = searchParams.get(\"tags\");\n    const categoryFromURL = searchParams.get(\"cat\");\n    const searchQueryFromURL = searchParams.get(\"search\");\n\n    // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\n    const tagsArray = tagsFromURL ? tagsFromURL.split(\"&\") : [];\n    const category = categoryFromURL ? categoryFromURL : \"\";\n\n    // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\n    setSelectedTags(tagsArray);\n    setSelectedCategory(category);\n    setSearchQuery(searchQueryFromURL || \"\");\n  }, [searchParams]); // searchParams 변화 감지\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const handlePostClick = postId => {\n    navigate(`/posts/${postId}`);\n  };\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 태그 다중선택 처리\n  const handleTagChange = tag => {\n    const newSelectedTags = selectedTags.includes(tag) ? selectedTags.filter(t => t !== tag) : [...selectedTags, tag];\n    setSelectedTags(newSelectedTags);\n    setSearchParams({\n      tags: newSelectedTags.join(\"&\"),\n      cat: selectedCategory\n    });\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = category => {\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\n    const newCategory = isDeselecting ? \"\" : category;\n    setSelectedCategory(newCategory);\n\n    // 현재의 검색 쿼리 (searchQuery)를 유지하는 새로운 쿼리 파라미터 객체를 생성\n    const newSearchParams = {\n      ...(selectedTags.length > 0 ? {\n        tags: selectedTags.join(\"&\")\n      } : {}),\n      ...(searchQuery ? {\n        search: searchQuery\n      } : {}) // 검색 쿼리가 있으면 추가\n    };\n    if (newCategory !== \"\") {\n      // 새로운 카테고리가 선택되었으면, 이를 쿼리 파라미터에 추가\n      newSearchParams.cat = newCategory;\n    }\n\n    // setSearchParams를 사용하여 URL의 쿼리 파라미터를 업데이트\n    setSearchParams(newSearchParams);\n  };\n\n  // posts Data 필터링\n  const filteredPosts = posts.filter(post => {\n    // 태그 카테고리 필터링\n    const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\n    const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\n\n    // 검색쿼리 필터링\n    const searchQueryLower = searchQuery.toLowerCase();\n    const matchesSearchQuery = searchQueryLower ? removeCodeBlockMarkers(post.title.toLowerCase()).includes(searchQueryLower) || removeCodeBlockMarkers(post.outline.toLowerCase()).includes(searchQueryLower) || removeCodeBlockMarkers(post.content.toLowerCase()).includes(searchQueryLower) : true;\n    return hasSelectedTags && hasSelectedCategory && matchesSearchQuery;\n  });\n  useEffect(() => {\n    window.scrollTo(0, 0); // 필터링된 포스트가 변경될 때마다 스크롤을 맨 위로\n  }, [filteredPosts]);\n\n  // 태그, 카테고리 중복 제거 및 오름차순 정렬\n  const uniqueTags = [...new Set(posts.flatMap(post => post.tags))].sort();\n  const uniqueCategories = [\"ALL\", ...new Set(posts.map(post => post.categories))].sort((a, b) => {\n    if (a === \"ALL\") return -1;\n    if (b === \"ALL\") return 1;\n    return a.localeCompare(b);\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ImgTagBox, {\n        children: [/*#__PURE__*/_jsxDEV(BackgroundImg, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Shape the Future of Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"with a Community of Enthusiasts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n          children: uniqueTags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n            onClick: () => handleTagChange(tag),\n            isSelected: selectedTags.includes(tag),\n            children: tag\n          }, tagIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCategoryContainer, {\n        children: [/*#__PURE__*/_jsxDEV(PostWrapper, {\n          children: [filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostContainer, {\n            isLast: index === filteredPosts.length - 1,\n            children: [\" \", /*#__PURE__*/_jsxDEV(PostTitle, {\n              onClick: () => handlePostClick(post._id),\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.profileImagePath,\n                alt: \"Author's profile\",\n                style: {\n                  width: \"30px\",\n                  height: \"30px\",\n                  borderRadius: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontFamily: \"Pretendard-Medium\",\n                  color: \"#252a2f\",\n                  marginLeft: \"20px\"\n                },\n                children: post.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontFamily: \"Pretendard-Medium\",\n                  color: \"#666666\",\n                  marginLeft: \"20px\"\n                },\n                children: new Date(post.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: \"Pretendard-Medium\",\n                color: \"#666666\"\n              },\n              children: post.outline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InnerTagContainer, {\n              children: post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n                onClick: event => handleTagClick(tag, event),\n                style: {\n                  marginRight: \"10px\",\n                  cursor: \"pointer\",\n                  gap: \"10px\"\n                },\n                children: tag\n              }, tagIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: \"Pretendard-SemiBold\",\n                color: \"#666666\",\n                fontSize: \"21px\"\n              },\n              children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uB0B4\\uC6A9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4 \\uD83D\\uDE05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: \"Pretendard-Medium\",\n                color: \"#666666\"\n              },\n              children: \"\\uB2E4\\uB978 \\uD0DC\\uADF8\\uC640 \\uCE74\\uD14C\\uACE0\\uB9AC\\uB85C \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n            onSubmit: executeSearch,\n            children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchInputChange // 변경된 핸들러 사용\n              ,\n              placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n              type: \"submit\",\n              children: \"\\uD83D\\uDD0E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontFamily: \"Pretendard-ExtraBold\",\n              fontSize: \"23px\"\n            },\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), uniqueCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n            onClick: () => handleCategoryChange(category),\n            isSelected: selectedCategory === category,\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogListPage, \"TZ+pw1QOtJrRb+VmDAvBqctXfAw=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c16 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ImgTagBox\");\n$RefreshReg$(_c3, \"BackgroundImg\");\n$RefreshReg$(_c4, \"PostCategoryContainer\");\n$RefreshReg$(_c5, \"TagContainer\");\n$RefreshReg$(_c6, \"CategoryContainer\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"SearchForm\");\n$RefreshReg$(_c9, \"SearchInput\");\n$RefreshReg$(_c10, \"SearchButton\");\n$RefreshReg$(_c11, \"PostWrapper\");\n$RefreshReg$(_c12, \"PostContainer\");\n$RefreshReg$(_c13, \"InnerTagContainer\");\n$RefreshReg$(_c14, \"PostTitle\");\n$RefreshReg$(_c15, \"Category\");\n$RefreshReg$(_c16, \"BlogListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","styled","css","HeaderComponent","BottomComponent","jsxDEV","_jsxDEV","Wrapper","div","_c","ImgTagBox","_c2","BackgroundImg","process","env","PUBLIC_URL","_c3","PostCategoryContainer","_c4","TagContainer","_c5","CategoryContainer","_c6","Tags","span","props","isSelected","_c7","SearchForm","form","_c8","SearchInput","input","_c9","SearchButton","button","_c10","PostWrapper","_c11","PostContainer","isLast","_c12","InnerTagContainer","_c13","PostTitle","_c14","Category","_c15","BlogListPage","_s","loading","setLoading","error","setError","posts","setPosts","selectedTags","setSelectedTags","selectedCategory","setSelectedCategory","searchParams","setSearchParams","searchQuery","setSearchQuery","navigate","resetFilters","sortPostsByDate","sort","a","b","Date","createdAt","removeCodeBlockMarkers","text","replace","executeSearch","e","preventDefault","Object","fromEntries","entries","search","handleSearchInputChange","event","target","value","fetch","then","response","ok","Error","json","data","sortedPosts","catch","message","finally","tagsFromURL","get","categoryFromURL","searchQueryFromURL","tagsArray","split","category","handlePostClick","postId","handleTagClick","tag","stopPropagation","handleTagChange","newSelectedTags","includes","filter","t","tags","join","cat","handleCategoryChange","isDeselecting","newCategory","newSearchParams","length","filteredPosts","post","hasSelectedTags","every","hasSelectedCategory","categories","searchQueryLower","toLowerCase","matchesSearchQuery","title","outline","content","window","scrollTo","uniqueTags","Set","flatMap","uniqueCategories","map","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","tagIndex","onClick","index","_id","style","display","alignItems","gap","src","profileImagePath","alt","width","height","borderRadius","fontFamily","color","marginLeft","author","toLocaleDateString","marginRight","cursor","flexDirection","fontSize","onSubmit","type","onChange","placeholder","_c16","$RefreshReg$"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport HeaderComponent from \"../ui/HeaderComponent\";\r\nimport BottomComponent from \"../ui/BottomComponent\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ImgTagBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 40px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(\"${process.env.PUBLIC_URL}/background.JPG\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  opacity: 0.5;\r\n  color: white;\r\n  font-family: \"Pretendard-ExtraBold\";\r\n  font-size: 60px;\r\n  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PostCategoryContainer = styled.div`\r\n  display: flex;\r\n  padding-top: 30px;\r\n  padding-left: 90px;\r\n  padding-right: 90px;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  gap: 50px;\r\n  justify-content: center; /* 추가: 자식 요소들이 중앙에 위치하도록 함 */\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 600px;\r\n  gap: 15px 7px;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n  display: flex;\r\n  min-width: 300px; /* 최소 너비 설정 */\r\n  max-width: 300px; /* 최대 너비 설정 */\r\n  flex-direction: column;\r\n  gap: 9px;\r\n`;\r\n\r\nconst Tags = styled.span`\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  display: flex;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  background-color: #ebebeb;\r\n  color: ${(props) =>\r\n    props.isSelected ? \"#3b82f6\" : \"#666666\"}; /* 조건부 색상 적용 */\r\n  text-align: center;\r\n  font-family: \"Pretendard-SemiBold\";\r\n  font-size: 13px;\r\n  justify-content: center;\r\n  align-items: center; /* 이 줄을 추가하세요 */\r\n  border-radius: 30px;\r\n  transition: color 0.1s ease;\r\n  &:hover {\r\n    color: #3b82f6;\r\n  }\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  height: 30px;\r\n  outline: none;\r\n  padding-left: 10px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\r\n  font-family: \"Pretendard-Medium\";\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  padding: 5px 10px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  background-color: #ebebeb;\r\n  color: #666666;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 750px; /* 최소 너비 설정 */\r\n  max-width: 750px; /* 최대 너비 설정 */\r\n  gap: 16px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 750px;\r\n  gap: 16px;\r\n  padding-bottom: 40px;\r\n  margin-bottom: 20px;\r\n  ${(props) =>\r\n    !props.isLast &&\r\n    css`\r\n      border-bottom: 1px solid #d4d4d4;\r\n    `}\r\n`;\r\n\r\nconst InnerTagContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst PostTitle = styled.span`\r\n  font-family: \"Pretendard-ExtraBold\";\r\n  font-size: 23px;\r\n  cursor: pointer;\r\n  transition: color 0.1s ease;\r\n  &:hover {\r\n    color: #666666;\r\n  }\r\n`;\r\n\r\nconst Category = styled.span`\r\n  font-family: \"Pretendard-Medium\";\r\n  cursor: pointer;\r\n  color: ${(props) => (props.isSelected ? \"#3b82f6\" : \"#252a2f\")};\r\n  transition: color 0.1s ease;\r\n  &:hover {\r\n    color: #3b82f6;\r\n  }\r\n`;\r\n\r\nconst BlogListPage = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n\r\n  // 필터링 초기화\r\n  const resetFilters = () => {\r\n    setSelectedTags([]);\r\n    setSelectedCategory(\"\");\r\n    setSearchParams({});\r\n  };\r\n\r\n  // 날짜 정렬\r\n  const sortPostsByDate = (posts) => {\r\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n  };\r\n\r\n  // 코드블록 마커 제거 함수\r\n  const removeCodeBlockMarkers = (text) => {\r\n    // 코드블록 시작과 끝 표시만 제거 (언어 표시 포함)\r\n    return text.replace(/```[\\w+\\s]*\\n/g, '').replace(/\\n```/g, '');\r\n  };\r\n\r\n  // 검색 실행 함수\r\n  const executeSearch = (e) => {\r\n    e.preventDefault(); // 폼 기본 제출 이벤트 방지\r\n\r\n    setSearchParams({\r\n      ...Object.fromEntries(searchParams.entries()),\r\n      search: searchQuery,\r\n    });\r\n  };\r\n\r\n  // 검색어 입력 처리 저장\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchQuery(event.target.value); // 입력된 검색어를 로컬 상태로 저장\r\n  };\r\n\r\n  // 초기 포스트 페이지 로딩\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/posts/\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch posts\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\r\n        setPosts(sortedPosts);\r\n        // setPosts(data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\r\n  useEffect(() => {\r\n    // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\r\n    const tagsFromURL = searchParams.get(\"tags\");\r\n    const categoryFromURL = searchParams.get(\"cat\");\r\n    const searchQueryFromURL = searchParams.get(\"search\");\r\n\r\n    // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\r\n    const tagsArray = tagsFromURL ? tagsFromURL.split(\"&\") : [];\r\n    const category = categoryFromURL ? categoryFromURL : \"\";\r\n\r\n    // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\r\n    setSelectedTags(tagsArray);\r\n    setSelectedCategory(category);\r\n    setSearchQuery(searchQueryFromURL || \"\");\r\n  }, [searchParams]); // searchParams 변화 감지\r\n\r\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/posts/${postId}`);\r\n  };\r\n\r\n  // 태그 단일선택 처리 (공통사용)\r\n  const handleTagClick = (tag, event) => {\r\n    event.stopPropagation();\r\n    navigate(`/?tags=${tag}`);\r\n  };\r\n\r\n  // 태그 다중선택 처리\r\n  const handleTagChange = (tag) => {\r\n    const newSelectedTags = selectedTags.includes(tag)\r\n      ? selectedTags.filter((t) => t !== tag)\r\n      : [...selectedTags, tag];\r\n    setSelectedTags(newSelectedTags);\r\n    setSearchParams({ tags: newSelectedTags.join(\"&\"), cat: selectedCategory });\r\n  };\r\n\r\n  // 카테고리 선택 처리\r\n  const handleCategoryChange = (category) => {\r\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\r\n    const newCategory = isDeselecting ? \"\" : category;\r\n    setSelectedCategory(newCategory);\r\n\r\n    // 현재의 검색 쿼리 (searchQuery)를 유지하는 새로운 쿼리 파라미터 객체를 생성\r\n    const newSearchParams = {\r\n      ...selectedTags.length > 0 ? { tags: selectedTags.join(\"&\") } : {},\r\n      ...searchQuery ? { search: searchQuery } : {}, // 검색 쿼리가 있으면 추가\r\n    };\r\n\r\n    if (newCategory !== \"\") {\r\n    // 새로운 카테고리가 선택되었으면, 이를 쿼리 파라미터에 추가\r\n      newSearchParams.cat = newCategory;\r\n    }\r\n\r\n    // setSearchParams를 사용하여 URL의 쿼리 파라미터를 업데이트\r\n    setSearchParams(newSearchParams);\r\n  };\r\n\r\n\r\n  // posts Data 필터링\r\n  const filteredPosts = posts.filter((post) => {\r\n    // 태그 카테고리 필터링\r\n    const hasSelectedTags =\r\n      selectedTags.length === 0 ||\r\n      selectedTags.every((tag) => post.tags.includes(tag));\r\n    const hasSelectedCategory =\r\n      !selectedCategory || post.categories.includes(selectedCategory);\r\n\r\n    // 검색쿼리 필터링\r\n    const searchQueryLower = searchQuery.toLowerCase();\r\n    const matchesSearchQuery = searchQueryLower\r\n      ? removeCodeBlockMarkers(post.title.toLowerCase()).includes(searchQueryLower) ||\r\n        removeCodeBlockMarkers(post.outline.toLowerCase()).includes(searchQueryLower) ||\r\n        removeCodeBlockMarkers(post.content.toLowerCase()).includes(searchQueryLower)\r\n      : true;\r\n\r\n  return hasSelectedTags && hasSelectedCategory && matchesSearchQuery;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0); // 필터링된 포스트가 변경될 때마다 스크롤을 맨 위로\r\n  }, [filteredPosts]);\r\n\r\n  // 태그, 카테고리 중복 제거 및 오름차순 정렬\r\n  const uniqueTags = [...new Set(posts.flatMap((post) => post.tags))].sort();\r\n  const uniqueCategories = [\"ALL\", ...new Set(posts.map((post) => post.categories))].sort((a, b) => {\r\n    if(a === \"ALL\") return -1; \r\n    if(b === \"ALL\") return 1; \r\n    return a.localeCompare(b);\r\n  });\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <HeaderComponent />\r\n      <Wrapper>\r\n        <ImgTagBox>\r\n          <BackgroundImg>\r\n            <span>Shape the Future of Data</span>\r\n            <span>with a Community of Enthusiasts</span>\r\n          </BackgroundImg>\r\n\r\n          {/* 태그 렌더링 - 다중 선택 */}\r\n          <TagContainer>\r\n            {uniqueTags.map((tag, tagIndex) => (\r\n              <Tags\r\n                key={tagIndex}\r\n                onClick={() => handleTagChange(tag)}\r\n                isSelected={selectedTags.includes(tag)}\r\n              >\r\n                {tag}\r\n              </Tags>\r\n            ))}\r\n          </TagContainer>\r\n        </ImgTagBox>\r\n\r\n        {/* 포스트 목록 렌더링 및 각종 click 이동 이벤트 */}\r\n        <PostCategoryContainer>\r\n          <PostWrapper>\r\n            {filteredPosts.map((post, index) => (\r\n              <PostContainer\r\n                key={index}\r\n                isLast={index === filteredPosts.length - 1}\r\n              >\r\n                {\" \"}\r\n                {/* 마지막 요소인지 확인 */}\r\n                {/* 제목 클릭 시 포스트로 이동 */}\r\n                <PostTitle onClick={() => handlePostClick(post._id)}>\r\n                  {post.title}\r\n                </PostTitle>\r\n                {/* 작성자, 프사, 날짜, 아웃라인 */}\r\n                <div\r\n                  style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\r\n                >\r\n                  <img\r\n                    src={post.profileImagePath}\r\n                    alt=\"Author's profile\"\r\n                    style={{\r\n                      width: \"30px\",\r\n                      height: \"30px\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                  />\r\n                  <span\r\n                    style={{\r\n                      fontFamily: \"Pretendard-Medium\",\r\n                      color: \"#252a2f\",\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                  >\r\n                    {post.author}\r\n                  </span>\r\n                  <span\r\n                    style={{\r\n                      fontFamily: \"Pretendard-Medium\",\r\n                      color: \"#666666\",\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                  >\r\n                    {new Date(post.createdAt).toLocaleDateString()}\r\n                  </span>\r\n                </div>\r\n                <span\r\n                  style={{ fontFamily: \"Pretendard-Medium\", color: \"#666666\" }}\r\n                >\r\n                  {post.outline}\r\n                </span>\r\n                {/* 태그 및 단일 필터링 */}\r\n                <InnerTagContainer>\r\n                  {post.tags.map((tag, tagIndex) => (\r\n                    <Tags\r\n                      key={tagIndex}\r\n                      onClick={(event) => handleTagClick(tag, event)}\r\n                      style={{\r\n                        marginRight: \"10px\",\r\n                        cursor: \"pointer\",\r\n                        gap: \"10px\",\r\n                      }}\r\n                    >\r\n                      {tag}\r\n                    </Tags>\r\n                  ))}\r\n                </InnerTagContainer>\r\n              </PostContainer>\r\n            ))}\r\n            {filteredPosts.length === 0 && (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"10px\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    fontFamily: \"Pretendard-SemiBold\",\r\n                    color: \"#666666\",\r\n                    fontSize: \"21px\",\r\n                  }}\r\n                >\r\n                  검색 결과에 해당하는 내용이 없습니다 😅\r\n                </span>\r\n                <span\r\n                  style={{ fontFamily: \"Pretendard-Medium\", color: \"#666666\" }}\r\n                >\r\n                  다른 태그와 카테고리로 검색해보세요\r\n                </span>\r\n              </div>\r\n            )}\r\n          </PostWrapper>\r\n\r\n          {/* 카테고리 버튼 검색 기능 렌더링 */}\r\n          <CategoryContainer>\r\n            <SearchForm onSubmit={executeSearch}>\r\n              <SearchInput\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={handleSearchInputChange} // 변경된 핸들러 사용\r\n                placeholder=\"검색어를 입력하세요\"\r\n              />\r\n              <SearchButton type=\"submit\">🔎</SearchButton>\r\n            </SearchForm>\r\n            <span\r\n              style={{\r\n                fontFamily: \"Pretendard-ExtraBold\",\r\n                fontSize: \"23px\",\r\n              }}\r\n            >\r\n              Category\r\n            </span>\r\n            {uniqueCategories.map((category, index) => (\r\n              <Category\r\n                key={index}\r\n                onClick={() => handleCategoryChange(category)}\r\n                isSelected={selectedCategory === category}\r\n              >\r\n                {category}\r\n              </Category>\r\n            ))}\r\n          </CategoryContainer>\r\n        </PostCategoryContainer>\r\n      </Wrapper>\r\n      <BottomComponent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}