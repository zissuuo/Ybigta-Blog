{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\2024-1 YBIGTA\\\\Ybigta_BLOG\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Pagination from \"react-js-pagination\";\n\n// Styled Components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\nconst CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\n_c = Tags;\nconst PaginationContainer = styled.div`\n  .pagination {\n    display: flex;\n    list-style: none;\n    padding: 0;\n  }\n\n  .pagination li {\n    margin: 0 5px;\n  }\n\n  .pagination li a {\n    text-decoration: none;\n    color: black;\n    background-color: white;\n    padding: 8px 12px;\n    border-radius: 50%; /* 둥근 모양 */\n    transition: background-color 0.3s, color 0.3s;\n  }\n\n  .pagination li a:hover {\n    background-color: #f0f0f0; /* 호버 시 배경색 변경 */\n  }\n\n  .pagination li.disabled a {\n    color: #d3d3d3;\n  }\n`;\n\n// Main Page\n_c2 = PaginationContainer;\nconst BlogListPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 페이지 이동\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [totalItemsCount, setTotalItemsCount] = useState(0); // 총 글 수\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const url = `http://localhost:8000/posts/?${searchParams.toString()}`;\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(\"Failed to fetch posts\");\n        const data = await response.json();\n        setPosts(data.items);\n        setTotalItemsCount(data.total);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [searchParams]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => navigate(`/posts/${post._id}`),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            color: \"gray\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profileImagePath,\n            alt: \"Author's profile\",\n            style: {\n              width: \"30px\",\n              height: \"30px\",\n              borderRadius: \"50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 10px\",\n              fontWeight: \"bold\",\n              color: \"lightgray\"\n            },\n            children: new Date(post.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.outline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n          onClick: event => handleTagClick(tag, event),\n          style: {\n            marginRight: \"10px\",\n            cursor: \"pointer\",\n            gap: \"10px\"\n          },\n          children: [\"#\", tag]\n        }, tagIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationContainer, {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        activePage: parseInt(searchParams.get(\"page\") || \"1\"),\n        itemsCountPerPage: 5,\n        totalItemsCount: totalItemsCount,\n        pageRangeDisplayed: 5,\n        onChange: pageNumber => {\n          navigate(`?${searchParams.toString()}&page=${pageNumber}`);\n        },\n        itemClass: \"page-item\",\n        linkClass: \"page-link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogListPage, \"A0KmVNfo2/8MNv7W/GdOlqqiwbE=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c3 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tags\");\n$RefreshReg$(_c2, \"PaginationContainer\");\n$RefreshReg$(_c3, \"BlogListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","styled","createGlobalStyle","Pagination","jsxDEV","_jsxDEV","Wrapper","div","TagContainer","CategoryContainer","Tags","span","_c","PaginationContainer","_c2","BlogListPage","_s","loading","setLoading","error","setError","navigate","posts","setPosts","totalItemsCount","setTotalItemsCount","searchParams","fetchPosts","url","toString","response","fetch","ok","Error","data","json","items","total","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","onClick","_id","style","cursor","title","display","alignItems","fontSize","fontWeight","color","author","src","profileImagePath","alt","width","height","borderRadius","margin","Date","createdAt","toLocaleDateString","outline","tags","tag","tagIndex","event","handleTagClick","marginRight","gap","activePage","parseInt","get","itemsCountPerPage","pageRangeDisplayed","onChange","pageNumber","itemClass","linkClass","_c3","$RefreshReg$"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Pagination from \"react-js-pagination\"\r\n\r\n// Styled Components\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 40px;\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  //width: 600px;\r\n  gap: 7px;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  //width: 600px;\r\n  gap: 7px;\r\n`;\r\n\r\nconst Tags = styled.span`\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  background-color: #ebebeb;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  justify-content: center;\r\n  color: #666666;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst PaginationContainer = styled.div`\r\n  .pagination {\r\n    display: flex;\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n\r\n  .pagination li {\r\n    margin: 0 5px;\r\n  }\r\n\r\n  .pagination li a {\r\n    text-decoration: none;\r\n    color: black;\r\n    background-color: white;\r\n    padding: 8px 12px;\r\n    border-radius: 50%; /* 둥근 모양 */\r\n    transition: background-color 0.3s, color 0.3s;\r\n  }\r\n\r\n  .pagination li a:hover {\r\n    background-color: #f0f0f0; /* 호버 시 배경색 변경 */\r\n  }\r\n\r\n  .pagination li.disabled a {\r\n    color: #d3d3d3;\r\n  }\r\n`;\r\n\r\n\r\n// Main Page\r\nconst BlogListPage = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [totalItemsCount, setTotalItemsCount] = useState(0); // 총 글 수\r\n  const [searchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const url = `http://localhost:8000/posts/?${searchParams.toString()}`;\r\n        const response = await fetch(url);\r\n        if (!response.ok) throw new Error(\"Failed to fetch posts\");\r\n        const data = await response.json();\r\n        setPosts(data.items);\r\n        setTotalItemsCount(data.total);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [searchParams]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      {/* 포스트 목록 렌더링 및 각종 click 이동 이벤트 */}\r\n      <div>\r\n        {posts.map((post, index) => (\r\n          <div key={index}>\r\n            {/* 제목 클릭 시 포스트로 이동 */}\r\n            <h2\r\n              onClick={() => navigate(`/posts/${post._id}`)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              {post.title}\r\n            </h2>\r\n\r\n            {/* 작성자, 프사, 날짜, 아웃라인 */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n                color: \"gray\",\r\n              }}\r\n            >\r\n              <span>{post.author}</span>\r\n              <img\r\n                src={post.profileImagePath}\r\n                alt=\"Author's profile\"\r\n                style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n              />\r\n              <span\r\n                style={{\r\n                  margin: \"0 10px\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"lightgray\",\r\n                }}\r\n              >\r\n                {new Date(post.createdAt).toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n\r\n            <h4>{post.outline}</h4>\r\n\r\n            {/* 태그 및 단일 필터링 */}\r\n            {post.tags.map((tag, tagIndex) => (\r\n              <Tags\r\n                key={tagIndex}\r\n                onClick={(event) => handleTagClick(tag, event)}\r\n                style={{ marginRight: \"10px\", cursor: \"pointer\", gap: \"10px\" }}\r\n              >\r\n                #{tag}\r\n              </Tags>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* 페이지네이션 컨트롤 */}\r\n      <PaginationContainer>\r\n        <Pagination\r\n          activePage={parseInt(searchParams.get(\"page\") || \"1\")}\r\n          itemsCountPerPage={5}\r\n          totalItemsCount={totalItemsCount}\r\n          pageRangeDisplayed={5}\r\n          onChange={(pageNumber) => {\r\n            navigate(`?${searchParams.toString()}&page=${pageNumber}`);\r\n          }}\r\n          itemClass=\"page-item\"\r\n          linkClass=\"page-link\"\r\n        />\r\n      </PaginationContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n \r\nexport default BlogListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}