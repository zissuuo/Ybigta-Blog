{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(', re, ')*');\n}\n\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const KEYWORDS = {\n    keyword: 'abort acronym acronyms alias all and assign binary card diag display ' + 'else eq file files for free ge gt if integer le loop lt maximizing ' + 'minimizing model models ne negative no not option options or ord ' + 'positive prod put putpage puttl repeat sameas semicont semiint smax ' + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal: 'eps inf na',\n    built_in: 'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' + 'randBinomial randLinear randTriangle round rPower sigmoid sign ' + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' + 'handleCollect handleDelete handleStatus handleSubmit heapFree ' + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' + 'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [{\n      begin: /=[lgenxc]=/\n    }, {\n      begin: /\\$/\n    }]\n  };\n  const QSTR = {\n    // One-line quoted comment string\n    className: 'comment',\n    variants: [{\n      begin: '\\'',\n      end: '\\''\n    }, {\n      begin: '\"',\n      end: '\"'\n    }],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [QSTR, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = {\n    // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [QSTR, ASSIGNMENT, {\n      className: 'comment',\n      // one comment word, then possibly more\n      begin: concat(COMMENT_WORD,\n      // [ ] because \\s would be too broad (matching newlines)\n      anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))),\n      relevance: 0\n    }]\n  };\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(/^\\$ontext/, /^\\$offtext/), {\n      className: 'meta',\n      begin: '^\\\\$[a-z0-9]+',\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'meta-keyword',\n        begin: '^\\\\$[a-z0-9]+'\n      }]\n    }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE,\n    // Declarations\n    {\n      beginKeywords: 'set sets parameter parameters variable variables ' + 'scalar scalars equation equations',\n      end: ';',\n      contains: [hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, ASSIGNMENT, DESCTEXT]\n    }, {\n      // table environment\n      beginKeywords: 'table',\n      end: ';',\n      returnBegin: true,\n      contains: [{\n        // table header row\n        beginKeywords: 'table',\n        end: '$',\n        contains: [DESCTEXT]\n      }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE\n      // Table does not contain DESCTEXT or ASSIGNMENT\n      ]\n    },\n    // Function definitions\n    {\n      className: 'function',\n      begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n      returnBegin: true,\n      contains: [{\n        // Function title\n        className: 'title',\n        begin: /^[a-z0-9_]+/\n      }, PARAMS, SYMBOLS]\n    }, hljs.C_NUMBER_MODE, SYMBOLS]\n  };\n}\nmodule.exports = gams;","map":{"version":3,"names":["source","re","anyNumberOfTimes","concat","args","joined","map","x","join","gams","hljs","KEYWORDS","keyword","literal","built_in","PARAMS","className","begin","end","excludeBegin","excludeEnd","SYMBOLS","variants","QSTR","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","endsWithParent","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","module","exports"],"sources":["E:/Documents/2024-1 YBIGTA/React/blog_git/Ybigta-Blog/frontend/node_modules/highlight.js/lib/languages/gams.js"],"sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction anyNumberOfTimes(re) {\r\n  return concat('(', re, ')*');\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/** @type LanguageFn */\r\nfunction gams(hljs) {\r\n  const KEYWORDS = {\r\n    keyword:\r\n      'abort acronym acronyms alias all and assign binary card diag display ' +\r\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\r\n      'minimizing model models ne negative no not option options or ord ' +\r\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\r\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\r\n    literal:\r\n      'eps inf na',\r\n    built_in:\r\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\r\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\r\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\r\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\r\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\r\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\r\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\r\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\r\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\r\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\r\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\r\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\r\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\r\n      'timeElapsed timeExec timeStart'\r\n  };\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    excludeBegin: true,\r\n    excludeEnd: true\r\n  };\r\n  const SYMBOLS = {\r\n    className: 'symbol',\r\n    variants: [\r\n      {\r\n        begin: /=[lgenxc]=/\r\n      },\r\n      {\r\n        begin: /\\$/\r\n      }\r\n    ]\r\n  };\r\n  const QSTR = { // One-line quoted comment string\r\n    className: 'comment',\r\n    variants: [\r\n      {\r\n        begin: '\\'',\r\n        end: '\\''\r\n      },\r\n      {\r\n        begin: '\"',\r\n        end: '\"'\r\n      }\r\n    ],\r\n    illegal: '\\\\n',\r\n    contains: [hljs.BACKSLASH_ESCAPE]\r\n  };\r\n  const ASSIGNMENT = {\r\n    begin: '/',\r\n    end: '/',\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      QSTR,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\r\n  const DESCTEXT = { // Parameter/set/variable description text\r\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\r\n    excludeBegin: true,\r\n    end: '$',\r\n    endsWithParent: true,\r\n    contains: [\r\n      QSTR,\r\n      ASSIGNMENT,\r\n      {\r\n        className: 'comment',\r\n        // one comment word, then possibly more\r\n        begin: concat(\r\n          COMMENT_WORD,\r\n          // [ ] because \\s would be too broad (matching newlines)\r\n          anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))\r\n        ),\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'GAMS',\r\n    aliases: ['gms'],\r\n    case_insensitive: true,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\r\n      {\r\n        className: 'meta',\r\n        begin: '^\\\\$[a-z0-9]+',\r\n        end: '$',\r\n        returnBegin: true,\r\n        contains: [\r\n          {\r\n            className: 'meta-keyword',\r\n            begin: '^\\\\$[a-z0-9]+'\r\n          }\r\n        ]\r\n      },\r\n      hljs.COMMENT('^\\\\*', '$'),\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      // Declarations\r\n      {\r\n        beginKeywords:\r\n          'set sets parameter parameters variable variables ' +\r\n          'scalar scalars equation equations',\r\n        end: ';',\r\n        contains: [\r\n          hljs.COMMENT('^\\\\*', '$'),\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          ASSIGNMENT,\r\n          DESCTEXT\r\n        ]\r\n      },\r\n      { // table environment\r\n        beginKeywords: 'table',\r\n        end: ';',\r\n        returnBegin: true,\r\n        contains: [\r\n          { // table header row\r\n            beginKeywords: 'table',\r\n            end: '$',\r\n            contains: [DESCTEXT]\r\n          },\r\n          hljs.COMMENT('^\\\\*', '$'),\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.QUOTE_STRING_MODE,\r\n          hljs.APOS_STRING_MODE,\r\n          hljs.C_NUMBER_MODE\r\n          // Table does not contain DESCTEXT or ASSIGNMENT\r\n        ]\r\n      },\r\n      // Function definitions\r\n      {\r\n        className: 'function',\r\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\r\n        returnBegin: true,\r\n        contains: [\r\n          { // Function title\r\n            className: 'title',\r\n            begin: /^[a-z0-9_]+/\r\n          },\r\n          PARAMS,\r\n          SYMBOLS\r\n        ]\r\n      },\r\n      hljs.C_NUMBER_MODE,\r\n      SYMBOLS\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = gams;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAACC,EAAE,EAAE;EAClB,IAAI,CAACA,EAAE,EAAE,OAAO,IAAI;EACpB,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE,OAAOA,EAAE;EAErC,OAAOA,EAAE,CAACD,MAAM;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAASE,gBAAgBA,CAACD,EAAE,EAAE;EAC5B,OAAOE,MAAM,CAAC,GAAG,EAAEF,EAAE,EAAE,IAAI,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAAC,GAAGC,IAAI,EAAE;EACvB,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAKP,MAAM,CAACO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EAClD,OAAOH,MAAM;AACf;;AAEA;AACA,SAASI,IAAIA,CAACC,IAAI,EAAE;EAClB,MAAMC,QAAQ,GAAG;IACfC,OAAO,EACL,uEAAuE,GACvE,qEAAqE,GACrE,mEAAmE,GACnE,sEAAsE,GACtE,sEAAsE;IACxEC,OAAO,EACL,YAAY;IACdC,QAAQ,EACN,uEAAuE,GACvE,mEAAmE,GACnE,uEAAuE,GACvE,4DAA4D,GAC5D,iEAAiE,GACjE,sEAAsE,GACtE,uEAAuE,GACvE,sEAAsE,GACtE,sEAAsE,GACtE,uEAAuE,GACvE,gEAAgE,GAChE,8DAA8D,GAC9D,mEAAmE,GACnE;EACJ,CAAC;EACD,MAAMC,MAAM,GAAG;IACbC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE;EACd,CAAC;EACD,MAAMC,OAAO,GAAG;IACdL,SAAS,EAAE,QAAQ;IACnBM,QAAQ,EAAE,CACR;MACEL,KAAK,EAAE;IACT,CAAC,EACD;MACEA,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;EACD,MAAMM,IAAI,GAAG;IAAE;IACbP,SAAS,EAAE,SAAS;IACpBM,QAAQ,EAAE,CACR;MACEL,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE;IACP,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,GAAG,EAAE;IACP,CAAC,CACF;IACDM,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,CAACf,IAAI,CAACgB,gBAAgB;EAClC,CAAC;EACD,MAAMC,UAAU,GAAG;IACjBV,KAAK,EAAE,GAAG;IACVC,GAAG,EAAE,GAAG;IACRU,QAAQ,EAAEjB,QAAQ;IAClBc,QAAQ,EAAE,CACRF,IAAI,EACJb,IAAI,CAACmB,mBAAmB,EACxBnB,IAAI,CAACoB,oBAAoB,EACzBpB,IAAI,CAACqB,iBAAiB,EACtBrB,IAAI,CAACsB,gBAAgB,EACrBtB,IAAI,CAACuB,aAAa;EAEtB,CAAC;EACD,MAAMC,YAAY,GAAG,sCAAsC;EAC3D,MAAMC,QAAQ,GAAG;IAAE;IACjBlB,KAAK,EAAE,0CAA0C;IACjDE,YAAY,EAAE,IAAI;IAClBD,GAAG,EAAE,GAAG;IACRkB,cAAc,EAAE,IAAI;IACpBX,QAAQ,EAAE,CACRF,IAAI,EACJI,UAAU,EACV;MACEX,SAAS,EAAE,SAAS;MACpB;MACAC,KAAK,EAAEd,MAAM,CACX+B,YAAY;MACZ;MACAhC,gBAAgB,CAACC,MAAM,CAAC,MAAM,EAAE+B,YAAY,CAAC,CAC/C,CAAC;MACDG,SAAS,EAAE;IACb,CAAC;EAEL,CAAC;EAED,OAAO;IACLC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,CAAC,KAAK,CAAC;IAChBC,gBAAgB,EAAE,IAAI;IACtBZ,QAAQ,EAAEjB,QAAQ;IAClBc,QAAQ,EAAE,CACRf,IAAI,CAAC+B,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,EACvC;MACEzB,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,eAAe;MACtBC,GAAG,EAAE,GAAG;MACRwB,WAAW,EAAE,IAAI;MACjBjB,QAAQ,EAAE,CACR;QACET,SAAS,EAAE,cAAc;QACzBC,KAAK,EAAE;MACT,CAAC;IAEL,CAAC,EACDP,IAAI,CAAC+B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EACzB/B,IAAI,CAACmB,mBAAmB,EACxBnB,IAAI,CAACoB,oBAAoB,EACzBpB,IAAI,CAACqB,iBAAiB,EACtBrB,IAAI,CAACsB,gBAAgB;IACrB;IACA;MACEW,aAAa,EACX,mDAAmD,GACnD,mCAAmC;MACrCzB,GAAG,EAAE,GAAG;MACRO,QAAQ,EAAE,CACRf,IAAI,CAAC+B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EACzB/B,IAAI,CAACmB,mBAAmB,EACxBnB,IAAI,CAACoB,oBAAoB,EACzBpB,IAAI,CAACqB,iBAAiB,EACtBrB,IAAI,CAACsB,gBAAgB,EACrBL,UAAU,EACVQ,QAAQ;IAEZ,CAAC,EACD;MAAE;MACAQ,aAAa,EAAE,OAAO;MACtBzB,GAAG,EAAE,GAAG;MACRwB,WAAW,EAAE,IAAI;MACjBjB,QAAQ,EAAE,CACR;QAAE;QACAkB,aAAa,EAAE,OAAO;QACtBzB,GAAG,EAAE,GAAG;QACRO,QAAQ,EAAE,CAACU,QAAQ;MACrB,CAAC,EACDzB,IAAI,CAAC+B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EACzB/B,IAAI,CAACmB,mBAAmB,EACxBnB,IAAI,CAACoB,oBAAoB,EACzBpB,IAAI,CAACqB,iBAAiB,EACtBrB,IAAI,CAACsB,gBAAgB,EACrBtB,IAAI,CAACuB;MACL;MAAA;IAEJ,CAAC;IACD;IACA;MACEjB,SAAS,EAAE,UAAU;MACrBC,KAAK,EAAE,gCAAgC;MACvCyB,WAAW,EAAE,IAAI;MACjBjB,QAAQ,EAAE,CACR;QAAE;QACAT,SAAS,EAAE,OAAO;QAClBC,KAAK,EAAE;MACT,CAAC,EACDF,MAAM,EACNM,OAAO;IAEX,CAAC,EACDX,IAAI,CAACuB,aAAa,EAClBZ,OAAO;EAEX,CAAC;AACH;AAEAuB,MAAM,CAACC,OAAO,GAAGpC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}