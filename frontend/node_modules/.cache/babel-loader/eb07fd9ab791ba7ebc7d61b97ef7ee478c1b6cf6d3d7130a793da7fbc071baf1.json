{"ast":null,"code":"/**\r\n * @typedef {import('mdast').Image} Image\r\n * @typedef {import('mdast').Parents} Parents\r\n * @typedef {import('../types.js').Info} Info\r\n * @typedef {import('../types.js').State} State\r\n */\n\nimport { checkQuote } from '../util/check-quote.js';\nimage.peek = imagePeek;\n\n/**\r\n * @param {Image} node\r\n * @param {Parents | undefined} _\r\n * @param {State} state\r\n * @param {Info} info\r\n * @returns {string}\r\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state);\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe';\n  const exit = state.enter('image');\n  let subexit = state.enter('label');\n  const tracker = state.createTracker(info);\n  let value = tracker.move('![');\n  value += tracker.move(state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  }));\n  value += tracker.move('](');\n  subexit();\n  if (\n  // If there’s no url but there is a title…\n  !node.url && node.title ||\n  // If there are control characters or whitespace.\n  /[\\0- \\u007F]/.test(node.url)) {\n    subexit = state.enter('destinationLiteral');\n    value += tracker.move('<');\n    value += tracker.move(state.safe(node.url, {\n      before: value,\n      after: '>',\n      ...tracker.current()\n    }));\n    value += tracker.move('>');\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw');\n    value += tracker.move(state.safe(node.url, {\n      before: value,\n      after: node.title ? ' ' : ')',\n      ...tracker.current()\n    }));\n  }\n  subexit();\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`);\n    value += tracker.move(' ' + quote);\n    value += tracker.move(state.safe(node.title, {\n      before: value,\n      after: quote,\n      ...tracker.current()\n    }));\n    value += tracker.move(quote);\n    subexit();\n  }\n  value += tracker.move(')');\n  exit();\n  return value;\n}\n\n/**\r\n * @returns {string}\r\n */\nfunction imagePeek() {\n  return '!';\n}","map":{"version":3,"names":["checkQuote","image","peek","imagePeek","node","_","state","info","quote","suffix","exit","enter","subexit","tracker","createTracker","value","move","safe","alt","before","after","current","url","title","test"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/node_modules/mdast-util-to-markdown/lib/handle/image.js"],"sourcesContent":["/**\r\n * @typedef {import('mdast').Image} Image\r\n * @typedef {import('mdast').Parents} Parents\r\n * @typedef {import('../types.js').Info} Info\r\n * @typedef {import('../types.js').State} State\r\n */\r\n\r\nimport {checkQuote} from '../util/check-quote.js'\r\n\r\nimage.peek = imagePeek\r\n\r\n/**\r\n * @param {Image} node\r\n * @param {Parents | undefined} _\r\n * @param {State} state\r\n * @param {Info} info\r\n * @returns {string}\r\n */\r\nexport function image(node, _, state, info) {\r\n  const quote = checkQuote(state)\r\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\r\n  const exit = state.enter('image')\r\n  let subexit = state.enter('label')\r\n  const tracker = state.createTracker(info)\r\n  let value = tracker.move('![')\r\n  value += tracker.move(\r\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\r\n  )\r\n  value += tracker.move('](')\r\n\r\n  subexit()\r\n\r\n  if (\r\n    // If there’s no url but there is a title…\r\n    (!node.url && node.title) ||\r\n    // If there are control characters or whitespace.\r\n    /[\\0- \\u007F]/.test(node.url)\r\n  ) {\r\n    subexit = state.enter('destinationLiteral')\r\n    value += tracker.move('<')\r\n    value += tracker.move(\r\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\r\n    )\r\n    value += tracker.move('>')\r\n  } else {\r\n    // No whitespace, raw is prettier.\r\n    subexit = state.enter('destinationRaw')\r\n    value += tracker.move(\r\n      state.safe(node.url, {\r\n        before: value,\r\n        after: node.title ? ' ' : ')',\r\n        ...tracker.current()\r\n      })\r\n    )\r\n  }\r\n\r\n  subexit()\r\n\r\n  if (node.title) {\r\n    subexit = state.enter(`title${suffix}`)\r\n    value += tracker.move(' ' + quote)\r\n    value += tracker.move(\r\n      state.safe(node.title, {\r\n        before: value,\r\n        after: quote,\r\n        ...tracker.current()\r\n      })\r\n    )\r\n    value += tracker.move(quote)\r\n    subexit()\r\n  }\r\n\r\n  value += tracker.move(')')\r\n  exit()\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * @returns {string}\r\n */\r\nfunction imagePeek() {\r\n  return '!'\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}