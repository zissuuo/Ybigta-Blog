{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\2024-1 YBIGTA\\\\Ybigta_BLOG\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n_c = Wrapper;\nconst CodeBlock = ({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) => {\n  const match = /language-(\\w+)/.exec(className || '');\n  return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    style: prism,\n    language: match[1],\n    PreTag: \"div\",\n    ...props,\n    children: String(children).replace(/\\n$/, '')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n    className: className,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CodeBlock;\nconst Image = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  ...props,\n  style: {\n    flex: \"column\",\n    maxWidth: \"auto\",\n    height: \"450px\",\n    justifyItems: \"center\"\n  } // 이 부분을 조정하여 이미지 크기 스타일을 적용\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this);\n_c3 = Image;\nconst ContentPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams(); // URL에서 postId를 추출\n  console.log(postId);\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\n    .then(response => response.json()).then(data => setPost(data)).catch(error => console.log(error));\n  }, [postId]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: event => handleTagClick(tag, event),\n        style: {\n          marginRight: \"10px\",\n          cursor: 'pointer',\n          gap: \"10px\"\n        },\n        children: [\"#\", tag]\n      }, tagIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        remarkPlugins: [remarkGfm],\n        components: {\n          code: CodeBlock,\n          img: Image\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ContentPage, \"O8AjZodbD9JGNm955xQD6NnSmsw=\", false, function () {\n  return [useParams];\n});\n_c4 = ContentPage;\nexport default ContentPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CodeBlock\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"ContentPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","createGlobalStyle","ReactMarkdown","remarkGfm","Prism","SyntaxHighlighter","prism","jsxDEV","_jsxDEV","Wrapper","div","_c","CodeBlock","node","inline","className","children","props","match","exec","style","language","PreTag","String","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Image","flex","maxWidth","height","justifyItems","_c3","ContentPage","_s","postId","console","log","post","setPost","fetch","then","response","json","data","catch","error","title","tags","map","tag","tagIndex","Tags","onClick","event","handleTagClick","marginRight","cursor","gap","remarkPlugins","components","code","img","content","_c4","$RefreshReg$"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/src/components/page/ContentPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\r\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n`;\r\n\r\nconst CodeBlock = ({node, inline, className, children, ...props}) => {\r\n  const match = /language-(\\w+)/.exec(className || '')\r\n  return !inline && match ? (\r\n    <SyntaxHighlighter style={prism} language={match[1]} PreTag=\"div\" {...props}>\r\n      {String(children).replace(/\\n$/, '')}\r\n    </SyntaxHighlighter>\r\n  ) : (\r\n    <code className={className} {...props}>\r\n      {children}\r\n    </code>\r\n  );\r\n};\r\n\r\n\r\nconst Image = ({node, ...props}) => (\r\n    <img\r\n      {...props}\r\n      style={{ flex: \"column\", maxWidth: \"auto\", height: \"450px\", justifyItems: \"center\" }} // 이 부분을 조정하여 이미지 크기 스타일을 적용\r\n    />\r\n  );\r\n\r\nconst ContentPage = () => {\r\n    const { postId } = useParams(); // URL에서 postId를 추출\r\n    console.log(postId);\r\n    const [post, setPost] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\r\n        .then(response => response.json())\r\n        .then(data => setPost(data))\r\n        .catch(error => console.log(error));\r\n    }, [postId]);\r\n\r\n    if (!post) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div>\r\n                <h2>{post.title}</h2>\r\n\r\n                {/* 태그 및 단일 필터링 */}\r\n                    {post.tags.map((tag, tagIndex) => (\r\n                        <Tags key={tagIndex} onClick={(event) => handleTagClick(tag, event)} style={{marginRight: \"10px\", cursor: 'pointer', gap: \"10px\" }}>\r\n                        #{tag}\r\n                        </Tags>\r\n                    ))}\r\n                    \r\n                <ReactMarkdown\r\n                    remarkPlugins={[remarkGfm]}\r\n                    components={{ code: CodeBlock, img: Image }}\r\n                >\r\n                    {post.content}\r\n                </ReactMarkdown>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default ContentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}