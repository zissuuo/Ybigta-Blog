{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\2024-1 YBIGTA\\\\Ybigta_BLOG\\\\blog_git\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useEffect, useState } from 'react';\n\n/* 컴포넌트 임포트 */\nimport Button from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n_c = Wrapper;\nconst TagButton = styled.button`\n    margin-right: 10px;\n    background-color: #e0e0e0;\n    border: none;\n    cursor: pointer;\n`;\nconst BlogListPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\n\n  useEffect(() => {\n    // 서버로부터 포스트 데이터를 가져옵니다.\n    fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\n    .then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, []);\n\n  /* 이동 */\n  const navigate = useNavigate();\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const navigateToPost = postId => {\n    navigate(`/post/${postId}`);\n  };\n\n  // 태그 버튼 클릭 시 해당 태그를 가진 글로 필터링하는 로직\n  const filterPostsByTag = tag => {\n    navigate(`/tags/${encodeURIComponent(tag)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBE14\\uB85C\\uADF8 \\uBA54\\uC778/\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => navigateToPost(post.id),\n          style: {\n            cursor: 'pointer'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"#\", tag]\n        }, tagIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogListPage, \"4AchB6hynESKM+cEN+Cl8Cq5jQU=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"BlogListPage\");","map":{"version":3,"names":["React","useNavigate","styled","createGlobalStyle","useEffect","useState","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","TagButton","button","BlogListPage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","log","navigate","navigateToPost","postId","filterPostsByTag","tag","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","onClick","id","style","cursor","title","tags","tagIndex","marginRight","_c2","$RefreshReg$"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\n\r\n/* 컴포넌트 임포트 */\r\nimport Button from '../ui/Button';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n`;\r\n\r\nconst TagButton = styled.button`\r\n    margin-right: 10px;\r\n    background-color: #e0e0e0;\r\n    border: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst BlogListPage = () => {\r\n\r\n    const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\r\n\r\n    useEffect(() => {\r\n      // 서버로부터 포스트 데이터를 가져옵니다.\r\n      fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\r\n        .then(response => response.json())\r\n        .then(data => setPosts(data))\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    /* 이동 */\r\n    const navigate = useNavigate();\r\n\r\n    // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\r\n    const navigateToPost = (postId) => {\r\n        navigate(`/post/${postId}`);\r\n    };\r\n\r\n    // 태그 버튼 클릭 시 해당 태그를 가진 글로 필터링하는 로직\r\n    const filterPostsByTag = (tag) => {\r\n        navigate(`/tags/${encodeURIComponent(tag)}`);\r\n      };\r\n      \r\n    return (\r\n    <Wrapper>\r\n        <h1>블로그 메인/리스트 페이지</h1>\r\n        <div>\r\n            {posts.map((post, index) => (\r\n                <div key={index}>\r\n                    <h2 onClick={() => navigateToPost(post.id)} style={{ cursor: 'pointer' }}>{post.title}</h2>\r\n                    {post.tags.map((tag, tagIndex) => (\r\n                        <span key={tagIndex} style={{marginRight: \"10px\"}}>\r\n                            #{tag}\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </Wrapper>\r\n    );\r\n};\r\n\r\nexport default BlogListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}