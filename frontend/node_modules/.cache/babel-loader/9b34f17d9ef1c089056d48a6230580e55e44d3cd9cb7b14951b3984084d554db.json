{"ast":null,"code":"/**\r\n * @typedef {import('hast').Parents} HastParents\r\n * @typedef {import('hast').Root} HastRoot\r\n * @typedef {import('mdast').Root} MdastRoot\r\n * @typedef {import('../state.js').State} State\r\n */\n\n// Make VS Code show references to the above types.\n'';\n\n/**\r\n * Turn an mdast `root` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastRoot} node\r\n *   mdast node.\r\n * @returns {HastParents}\r\n *   hast node.\r\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {\n    type: 'root',\n    children: state.wrap(state.all(node))\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["root","state","node","result","type","children","wrap","all","patch","applyData"],"sources":["E:/Documents/2024-1 YBIGTA/React/blog_git/Ybigta-Blog/frontend/node_modules/mdast-util-to-hast/lib/handlers/root.js"],"sourcesContent":["/**\r\n * @typedef {import('hast').Parents} HastParents\r\n * @typedef {import('hast').Root} HastRoot\r\n * @typedef {import('mdast').Root} MdastRoot\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n// Make VS Code show references to the above types.\r\n''\r\n\r\n/**\r\n * Turn an mdast `root` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {MdastRoot} node\r\n *   mdast node.\r\n * @returns {HastParents}\r\n *   hast node.\r\n */\r\nexport function root(state, node) {\r\n  /** @type {HastRoot} */\r\n  const result = {type: 'root', children: state.wrap(state.all(node))}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,IAAIA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAChC;EACA,MAAMC,MAAM,GAAG;IAACC,IAAI,EAAE,MAAM;IAAEC,QAAQ,EAAEJ,KAAK,CAACK,IAAI,CAACL,KAAK,CAACM,GAAG,CAACL,IAAI,CAAC;EAAC,CAAC;EACpED,KAAK,CAACO,KAAK,CAACN,IAAI,EAAEC,MAAM,CAAC;EACzB,OAAOF,KAAK,CAACQ,SAAS,CAACP,IAAI,EAAEC,MAAM,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}