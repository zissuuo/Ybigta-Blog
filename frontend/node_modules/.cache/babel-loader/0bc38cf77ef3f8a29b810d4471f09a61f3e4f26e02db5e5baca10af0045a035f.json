{"ast":null,"code":"/**\r\n * Count how often a character (or substring) is used in a string.\r\n *\r\n * @param {string} value\r\n *   Value to search in.\r\n * @param {string} character\r\n *   Character (or substring) to look for.\r\n * @return {number}\r\n *   Number of times `character` occurred in `value`.\r\n */\nexport function ccount(value, character) {\n  const source = String(value);\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character');\n  }\n  let count = 0;\n  let index = source.indexOf(character);\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n  return count;\n}","map":{"version":3,"names":["ccount","value","character","source","String","TypeError","count","index","indexOf","length"],"sources":["C:/Users/rjalr/OneDrive/바탕 화면/ybigta/ybigta_blog_2/Ybigta-Blog/frontend/node_modules/ccount/index.js"],"sourcesContent":["/**\r\n * Count how often a character (or substring) is used in a string.\r\n *\r\n * @param {string} value\r\n *   Value to search in.\r\n * @param {string} character\r\n *   Character (or substring) to look for.\r\n * @return {number}\r\n *   Number of times `character` occurred in `value`.\r\n */\r\nexport function ccount(value, character) {\r\n  const source = String(value)\r\n\r\n  if (typeof character !== 'string') {\r\n    throw new TypeError('Expected character')\r\n  }\r\n\r\n  let count = 0\r\n  let index = source.indexOf(character)\r\n\r\n  while (index !== -1) {\r\n    count++\r\n    index = source.indexOf(character, index + character.length)\r\n  }\r\n\r\n  return count\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAMA,CAACC,KAAK,EAAEC,SAAS,EAAE;EACvC,MAAMC,MAAM,GAAGC,MAAM,CAACH,KAAK,CAAC;EAE5B,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIG,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EAEA,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAGJ,MAAM,CAACK,OAAO,CAACN,SAAS,CAAC;EAErC,OAAOK,KAAK,KAAK,CAAC,CAAC,EAAE;IACnBD,KAAK,EAAE;IACPC,KAAK,GAAGJ,MAAM,CAACK,OAAO,CAACN,SAAS,EAAEK,KAAK,GAAGL,SAAS,CAACO,MAAM,CAAC;EAC7D;EAEA,OAAOH,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}