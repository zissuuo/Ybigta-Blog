{"ast":null,"code":"'use strict';\n\nmodule.exports = toml;\ntoml.displayName = 'toml';\ntoml.aliases = [];\nfunction toml(Prism) {\n  ;\n  (function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n    /**\r\n     * @param {string} pattern\r\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key;\n      });\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [{\n        // Offset Date-Time, Local Date-Time, Local Date\n        pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n        alias: 'number'\n      }, {\n        // Local Time\n        pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n        alias: 'number'\n      }],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","toml","displayName","aliases","Prism","key","source","insertKey","pattern","replace","languages","comment","greedy","table","RegExp","lookbehind","alias","string","date","number","boolean","punctuation"],"sources":["C:/Users/rjalr/OneDrive/바탕 화면/ybigta/ybigta_blog_2/Ybigta-Blog/frontend/node_modules/refractor/lang/toml.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = toml\r\ntoml.displayName = 'toml'\r\ntoml.aliases = []\r\nfunction toml(Prism) {\r\n  ;(function (Prism) {\r\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\r\n    /**\r\n     * @param {string} pattern\r\n     */\r\n    function insertKey(pattern) {\r\n      return pattern.replace(/__/g, function () {\r\n        return key\r\n      })\r\n    }\r\n    Prism.languages.toml = {\r\n      comment: {\r\n        pattern: /#.*/,\r\n        greedy: true\r\n      },\r\n      table: {\r\n        pattern: RegExp(\r\n          insertKey(\r\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\r\n          ),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'class-name'\r\n      },\r\n      key: {\r\n        pattern: RegExp(\r\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'property'\r\n      },\r\n      string: {\r\n        pattern:\r\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n        greedy: true\r\n      },\r\n      date: [\r\n        {\r\n          // Offset Date-Time, Local Date-Time, Local Date\r\n          pattern:\r\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\r\n          alias: 'number'\r\n        },\r\n        {\r\n          // Local Time\r\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\r\n          alias: 'number'\r\n        }\r\n      ],\r\n      number:\r\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      punctuation: /[.,=[\\]{}]/\r\n    }\r\n  })(Prism)\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,IAAI;AACrBA,IAAI,CAACC,WAAW,GAAG,MAAM;AACzBD,IAAI,CAACE,OAAO,GAAG,EAAE;AACjB,SAASF,IAAIA,CAACG,KAAK,EAAE;EACnB;EAAC,CAAC,UAAUA,KAAK,EAAE;IACjB,IAAIC,GAAG,GAAG,8CAA8C,CAACC,MAAM;IAC/D;AACJ;AACA;IACI,SAASC,SAASA,CAACC,OAAO,EAAE;MAC1B,OAAOA,OAAO,CAACC,OAAO,CAAC,KAAK,EAAE,YAAY;QACxC,OAAOJ,GAAG;MACZ,CAAC,CAAC;IACJ;IACAD,KAAK,CAACM,SAAS,CAACT,IAAI,GAAG;MACrBU,OAAO,EAAE;QACPH,OAAO,EAAE,KAAK;QACdI,MAAM,EAAE;MACV,CAAC;MACDC,KAAK,EAAE;QACLL,OAAO,EAAEM,MAAM,CACbP,SAAS,CACP,oDAAoD,CAACD,MACvD,CAAC,EACD,GACF,CAAC;QACDS,UAAU,EAAE,IAAI;QAChBH,MAAM,EAAE,IAAI;QACZI,KAAK,EAAE;MACT,CAAC;MACDX,GAAG,EAAE;QACHG,OAAO,EAAEM,MAAM,CACbP,SAAS,CAAC,4CAA4C,CAACD,MAAM,CAAC,EAC9D,GACF,CAAC;QACDS,UAAU,EAAE,IAAI;QAChBH,MAAM,EAAE,IAAI;QACZI,KAAK,EAAE;MACT,CAAC;MACDC,MAAM,EAAE;QACNT,OAAO,EACL,6EAA6E;QAC/EI,MAAM,EAAE;MACV,CAAC;MACDM,IAAI,EAAE,CACJ;QACE;QACAV,OAAO,EACL,mFAAmF;QACrFQ,KAAK,EAAE;MACT,CAAC,EACD;QACE;QACAR,OAAO,EAAE,iCAAiC;QAC1CQ,KAAK,EAAE;MACT,CAAC,CACF;MACDG,MAAM,EACJ,0KAA0K;MAC5KC,OAAO,EAAE,oBAAoB;MAC7BC,WAAW,EAAE;IACf,CAAC;EACH,CAAC,EAAEjB,KAAK,CAAC;AACX","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}