{"ast":null,"code":"var _jsxFileName = \"/Users/kimjisu/Desktop/ybigblog/frontend/src/components/page/ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n\n// 마크다운 스타일링을 위한 컴포넌트\n_c = Wrapper;\nconst CodeBlock = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"pre\", {\n  style: {\n    background: \"#e4e4e4\",\n    padding: \"15px\",\n    borderRadius: \"10px\",\n    width: \"fit-content\"\n  },\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n_c2 = CodeBlock;\nconst Image = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  ...props,\n  style: {\n    maxWidth: \"100%\",\n    height: \"auto\"\n  } // 이 부분을 조정하여 이미지 크기 스타일을 적용\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this);\n_c3 = Image;\nconst ContentPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\n\n  useEffect(() => {\n    // 서버로부터 포스트 데이터를 가져옵니다.\n    fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\n    .then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD3EC\\uC2A4\\uD2B8 \\uB0B4\\uC6A9 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: posts[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: posts[0].tags[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          remarkPlugins: [remarkGfm],\n          components: {\n            code: CodeBlock,\n            img: Image\n          },\n          children: posts[0].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c4 = ContentPage;\nexport default ContentPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CodeBlock\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"ContentPage\");","map":{"version":3,"names":["React","useNavigate","styled","createGlobalStyle","useEffect","useState","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","Wrapper","div","_c","CodeBlock","node","props","style","background","padding","borderRadius","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Image","maxWidth","height","_c3","ContentPage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","log","length","title","tags","remarkPlugins","components","code","img","content","_c4","$RefreshReg$"],"sources":["/Users/kimjisu/Desktop/ybigblog/frontend/src/components/page/ContentPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n\n\n// 마크다운 스타일링을 위한 컴포넌트\nconst CodeBlock = ({node, ...props}) => (\n    <pre style={{background: \"#e4e4e4\", padding: \"15px\", borderRadius: \"10px\", width: \"fit-content\"}}>\n      <code>{props.children}</code>\n    </pre>\n  );\n\nconst Image = ({node, ...props}) => (\n    <img\n      {...props}\n      style={{ maxWidth: \"100%\", height: \"auto\" }} // 이 부분을 조정하여 이미지 크기 스타일을 적용\n    />\n  );\n\n\nconst ContentPage = () => {\n\n    const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\n\n    useEffect(() => {\n      // 서버로부터 포스트 데이터를 가져옵니다.\n      fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\n        .then(response => response.json())\n        .then(data => setPosts(data))\n        .catch(error => console.log(error));\n    }, []);\n  \n    return (\n    <Wrapper>\n      <div>\n        <h1>포스트 내용 페이지</h1>\n        {posts.length > 0 && (\n          <div>\n            <h2>{posts[0].title}</h2>\n            <p>{posts[0].tags[0]}</p>\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm]}\n              components={{ code: CodeBlock, img: Image }}>\n              {posts[0].content}\n            </ReactMarkdown>\n          </div>\n        )}\n      </div>\n    </Wrapper>\n    );\n\n};\n\nexport default ContentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}