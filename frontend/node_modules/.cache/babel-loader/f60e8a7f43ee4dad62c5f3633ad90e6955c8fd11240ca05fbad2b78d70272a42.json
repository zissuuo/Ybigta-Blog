{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n\n/*\r\nLanguage: Augmented Backus-Naur Form\r\nAuthor: Alex McKibben <alex@nullscope.net>\r\nWebsite: https://tools.ietf.org/html/rfc5234\r\nAudit: 2020\r\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  const regexes = {\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\n    unexpectedChars: /[!@#$^&',?+~`|:]/\n  };\n  const keywords = [\"ALPHA\", \"BIT\", \"CHAR\", \"CR\", \"CRLF\", \"CTL\", \"DIGIT\", \"DQUOTE\", \"HEXDIG\", \"HTAB\", \"LF\", \"LWSP\", \"OCTET\", \"SP\", \"VCHAR\", \"WSP\"];\n  const commentMode = hljs.COMMENT(/;/, /$/);\n  const terminalBinaryMode = {\n    className: \"symbol\",\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n  };\n  const terminalDecimalMode = {\n    className: \"symbol\",\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n  };\n  const terminalHexadecimalMode = {\n    className: \"symbol\",\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\n  };\n  const caseSensitivityIndicatorMode = {\n    className: \"symbol\",\n    begin: /%[si]/\n  };\n  const ruleDeclarationMode = {\n    className: \"attribute\",\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\n  };\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: regexes.unexpectedChars,\n    keywords: keywords,\n    contains: [ruleDeclarationMode, commentMode, terminalBinaryMode, terminalDecimalMode, terminalHexadecimalMode, caseSensitivityIndicatorMode, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE]\n  };\n}\nmodule.exports = abnf;","map":{"version":3,"names":["source","re","concat","args","joined","map","x","join","abnf","hljs","regexes","ruleDeclaration","unexpectedChars","keywords","commentMode","COMMENT","terminalBinaryMode","className","begin","terminalDecimalMode","terminalHexadecimalMode","caseSensitivityIndicatorMode","ruleDeclarationMode","name","illegal","contains","QUOTE_STRING_MODE","NUMBER_MODE","module","exports"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/node_modules/highlight.js/lib/languages/abnf.js"],"sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Augmented Backus-Naur Form\r\nAuthor: Alex McKibben <alex@nullscope.net>\r\nWebsite: https://tools.ietf.org/html/rfc5234\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction abnf(hljs) {\r\n  const regexes = {\r\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\r\n    unexpectedChars: /[!@#$^&',?+~`|:]/\r\n  };\r\n\r\n  const keywords = [\r\n    \"ALPHA\",\r\n    \"BIT\",\r\n    \"CHAR\",\r\n    \"CR\",\r\n    \"CRLF\",\r\n    \"CTL\",\r\n    \"DIGIT\",\r\n    \"DQUOTE\",\r\n    \"HEXDIG\",\r\n    \"HTAB\",\r\n    \"LF\",\r\n    \"LWSP\",\r\n    \"OCTET\",\r\n    \"SP\",\r\n    \"VCHAR\",\r\n    \"WSP\"\r\n  ];\r\n\r\n  const commentMode = hljs.COMMENT(/;/, /$/);\r\n\r\n  const terminalBinaryMode = {\r\n    className: \"symbol\",\r\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\r\n  };\r\n\r\n  const terminalDecimalMode = {\r\n    className: \"symbol\",\r\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\r\n  };\r\n\r\n  const terminalHexadecimalMode = {\r\n    className: \"symbol\",\r\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\r\n  };\r\n\r\n  const caseSensitivityIndicatorMode = {\r\n    className: \"symbol\",\r\n    begin: /%[si]/\r\n  };\r\n\r\n  const ruleDeclarationMode = {\r\n    className: \"attribute\",\r\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\r\n  };\r\n\r\n  return {\r\n    name: 'Augmented Backus-Naur Form',\r\n    illegal: regexes.unexpectedChars,\r\n    keywords: keywords,\r\n    contains: [\r\n      ruleDeclarationMode,\r\n      commentMode,\r\n      terminalBinaryMode,\r\n      terminalDecimalMode,\r\n      terminalHexadecimalMode,\r\n      caseSensitivityIndicatorMode,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = abnf;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAACC,EAAE,EAAE;EAClB,IAAI,CAACA,EAAE,EAAE,OAAO,IAAI;EACpB,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE,OAAOA,EAAE;EAErC,OAAOA,EAAE,CAACD,MAAM;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAAC,GAAGC,IAAI,EAAE;EACvB,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAKN,MAAM,CAACM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EAClD,OAAOH,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASI,IAAIA,CAACC,IAAI,EAAE;EAClB,MAAMC,OAAO,GAAG;IACdC,eAAe,EAAE,wBAAwB;IACzCC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMC,QAAQ,GAAG,CACf,OAAO,EACP,KAAK,EACL,MAAM,EACN,IAAI,EACJ,MAAM,EACN,KAAK,EACL,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,IAAI,EACJ,MAAM,EACN,OAAO,EACP,IAAI,EACJ,OAAO,EACP,KAAK,CACN;EAED,MAAMC,WAAW,GAAGL,IAAI,CAACM,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAE1C,MAAMC,kBAAkB,GAAG;IACzBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,mBAAmB,GAAG;IAC1BF,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EAED,MAAME,uBAAuB,GAAG;IAC9BH,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMG,4BAA4B,GAAG;IACnCJ,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMI,mBAAmB,GAAG;IAC1BL,SAAS,EAAE,WAAW;IACtBC,KAAK,EAAEhB,MAAM,CAACQ,OAAO,CAACC,eAAe,EAAE,UAAU;EACnD,CAAC;EAED,OAAO;IACLY,IAAI,EAAE,4BAA4B;IAClCC,OAAO,EAAEd,OAAO,CAACE,eAAe;IAChCC,QAAQ,EAAEA,QAAQ;IAClBY,QAAQ,EAAE,CACRH,mBAAmB,EACnBR,WAAW,EACXE,kBAAkB,EAClBG,mBAAmB,EACnBC,uBAAuB,EACvBC,4BAA4B,EAC5BZ,IAAI,CAACiB,iBAAiB,EACtBjB,IAAI,CAACkB,WAAW;EAEpB,CAAC;AACH;AAEAC,MAAM,CAACC,OAAO,GAAGrB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}