{"ast":null,"code":"/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\r\n * @typedef {import('../state.js').State} State\r\n */\n\n// Make VS Code show references to the above types.\n'';\n\n/**\r\n * Turn an mdast `thematicBreak` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ThematicBreak} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["thematicBreak","state","node","result","type","tagName","properties","children","patch","applyData"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"],"sourcesContent":["/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\n// Make VS Code show references to the above types.\r\n''\r\n\r\n/**\r\n * Turn an mdast `thematicBreak` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ThematicBreak} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nexport function thematicBreak(state, node) {\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'hr',\r\n    properties: {},\r\n    children: []\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACzC;EACA,MAAMC,MAAM,GAAG;IACbC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,CAAC,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDN,KAAK,CAACO,KAAK,CAACN,IAAI,EAAEC,MAAM,CAAC;EACzB,OAAOF,KAAK,CAACQ,SAAS,CAACP,IAAI,EAAEC,MAAM,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}