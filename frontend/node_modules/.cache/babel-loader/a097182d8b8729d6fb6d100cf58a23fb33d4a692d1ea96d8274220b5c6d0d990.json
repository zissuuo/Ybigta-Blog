{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjalr\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\ybigta\\\\ybigta_blog_2\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n_c = Wrapper;\nconst CodeBlock = ({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) => {\n  const match = /language-(\\w+)/.exec(className || \"\");\n  return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    style: prism,\n    language: match[1],\n    PreTag: \"div\",\n    ...props,\n    children: String(children).replace(/\\n$/, \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n    className: className,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CodeBlock;\nconst Image = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  ...props,\n  style: {\n    flex: \"column\",\n    maxWidth: \"auto\",\n    height: \"450px\",\n    justifyItems: \"center\"\n  } // 이 부분을 조정하여 이미지 크기 스타일을 적용\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n_c3 = Image;\nconst ContentPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams(); // URL에서 postId를 추출\n  console.log(postId);\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\n    .then(response => response.json()).then(data => setPost(data)).catch(error => console.log(error));\n  }, [postId]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n\n  // 현재 포스트의 인덱스를 찾음\n  const currentIndex = posts.findIndex(p => p._id === postId);\n\n  // 이전 포스트와 다음 포스트를 결정\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\n  const nextPost = currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\n  const goToPost = postId => {\n    navigate(`/posts/${postId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), post.tags && post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"#\", tag]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 53\n      }, this)), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        remarkPlugins: [remarkGfm],\n        components: {\n          code: CodeBlock,\n          img: Image\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), prevPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(prevPost._id),\n      children: [\"\\uC774\\uC804\\uAE00: \", prevPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), nextPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(nextPost._id),\n      children: [\"\\uB2E4\\uC74C\\uAE00: \", nextPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"O8AjZodbD9JGNm955xQD6NnSmsw=\", false, function () {\n  return [useParams];\n});\n_c4 = ContentPage;\nconst Box = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    border: \"1px solid black\",\n    padding: \"20px\",\n    marginTop: \"20px\"\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 3\n}, this);\n_c5 = Box;\nexport default ContentPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CodeBlock\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"ContentPage\");\n$RefreshReg$(_c5, \"Box\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","createGlobalStyle","ReactMarkdown","remarkGfm","Prism","SyntaxHighlighter","prism","jsxDEV","_jsxDEV","Wrapper","div","_c","CodeBlock","node","inline","className","children","props","match","exec","style","language","PreTag","String","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Image","flex","maxWidth","height","justifyItems","_c3","ContentPage","_s","postId","console","log","post","setPost","fetch","then","response","json","data","catch","error","currentIndex","posts","findIndex","p","_id","prevPost","nextPost","length","goToPost","navigate","title","tags","map","tag","index","remarkPlugins","components","code","img","content","Box","onClick","_c4","border","padding","marginTop","_c5","$RefreshReg$"],"sources":["C:/Users/rjalr/OneDrive/바탕 화면/ybigta/ybigta_blog_2/Ybigta-Blog/frontend/src/components/page/ContentPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\r\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 40px;\r\n`;\r\n\r\nconst CodeBlock = ({ node, inline, className, children, ...props }) => {\r\n  const match = /language-(\\w+)/.exec(className || \"\");\r\n  return !inline && match ? (\r\n    <SyntaxHighlighter\r\n      style={prism}\r\n      language={match[1]}\r\n      PreTag=\"div\"\r\n      {...props}\r\n    >\r\n      {String(children).replace(/\\n$/, \"\")}\r\n    </SyntaxHighlighter>\r\n  ) : (\r\n    <code className={className} {...props}>\r\n      {children}\r\n    </code>\r\n  );\r\n};\r\n\r\nconst Image = ({ node, ...props }) => (\r\n  <img\r\n    {...props}\r\n    style={{\r\n      flex: \"column\",\r\n      maxWidth: \"auto\",\r\n      height: \"450px\",\r\n      justifyItems: \"center\",\r\n    }} // 이 부분을 조정하여 이미지 크기 스타일을 적용\r\n  />\r\n);\r\n\r\nconst ContentPage = () => {\r\n  const { postId } = useParams(); // URL에서 postId를 추출\r\n  console.log(postId);\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\r\n      .then((response) => response.json())\r\n      .then((data) => setPost(data))\r\n      .catch((error) => console.log(error));\r\n  }, [postId]);\r\n\r\n  if (!post) return <div>Loading...</div>;\r\n\r\n  // 현재 포스트의 인덱스를 찾음\r\n  const currentIndex = posts.findIndex((p) => p._id === postId);\r\n\r\n  // 이전 포스트와 다음 포스트를 결정\r\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\r\n  const nextPost =\r\n    currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\r\n\r\n  const goToPost = (postId) => {\r\n    navigate(`/posts/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h2>{post.title}</h2>\r\n        {post.tags && post.tags.map((tag, index) => <p key={index}>#{tag}</p>)}\r\n        <ReactMarkdown\r\n          remarkPlugins={[remarkGfm]}\r\n          components={{ code: CodeBlock, img: Image }}\r\n        >\r\n          {post.content}\r\n        </ReactMarkdown>\r\n      </div>\r\n      {prevPost && (\r\n        <Box onClick={() => goToPost(prevPost._id)}>\r\n          이전글: {prevPost.title}\r\n        </Box>\r\n      )}\r\n      {nextPost && (\r\n        <Box onClick={() => goToPost(nextPost._id)}>\r\n          다음글: {nextPost.title}\r\n        </Box>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Box = ({ children }) => (\r\n  <div\r\n    style={{ border: \"1px solid black\", padding: \"20px\", marginTop: \"20px\" }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default ContentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAC7D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE;AACA,SAASC,KAAK,QAAQ,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,OAAO,GAAGT,MAAM,CAACU,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,KAAK;EACrE,MAAMC,KAAK,GAAG,gBAAgB,CAACC,IAAI,CAACJ,SAAS,IAAI,EAAE,CAAC;EACpD,OAAO,CAACD,MAAM,IAAII,KAAK,gBACrBV,OAAA,CAACH,iBAAiB;IAChBe,KAAK,EAAEd,KAAM;IACbe,QAAQ,EAAEH,KAAK,CAAC,CAAC,CAAE;IACnBI,MAAM,EAAC,KAAK;IAAA,GACRL,KAAK;IAAAD,QAAA,EAERO,MAAM,CAACP,QAAQ,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,EAAE;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC,gBAEpBpB,OAAA;IAAMO,SAAS,EAAEA,SAAU;IAAA,GAAKE,KAAK;IAAAD,QAAA,EAClCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACP;AACH,CAAC;AAACC,GAAA,GAhBIjB,SAAS;AAkBf,MAAMkB,KAAK,GAAGA,CAAC;EAAEjB,IAAI;EAAE,GAAGI;AAAM,CAAC,kBAC/BT,OAAA;EAAA,GACMS,KAAK;EACTG,KAAK,EAAE;IACLW,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,OAAO;IACfC,YAAY,EAAE;EAChB,CAAE,CAAC;AAAA;EAAAT,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACF;AAACO,GAAA,GAVIL,KAAK;AAYX,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGvC,SAAS,CAAC,CAAC,CAAC,CAAC;EAChCwC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd8C,KAAK,CAAE,+BAA8BL,MAAO,EAAC,CAAC,CAAC;IAAA,CAC5CM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,OAAO,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACG,IAAI,EAAE,oBAAOjC,OAAA;IAAAQ,QAAA,EAAK;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAEvC;EACA,MAAMsB,YAAY,GAAGC,KAAK,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKhB,MAAM,CAAC;;EAE7D;EACA,MAAMiB,QAAQ,GAAGL,YAAY,GAAG,CAAC,GAAGC,KAAK,CAACD,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI;EAClE,MAAMM,QAAQ,GACZN,YAAY,GAAGC,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACD,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI;EAElE,MAAMQ,QAAQ,GAAIpB,MAAM,IAAK;IAC3BqB,QAAQ,CAAE,UAASrB,MAAO,EAAC,CAAC;EAC9B,CAAC;EAED,oBACE9B,OAAA,CAACC,OAAO;IAAAO,QAAA,gBACNR,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAKyB,IAAI,CAACmB;MAAK;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACpBa,IAAI,CAACoB,IAAI,IAAIpB,IAAI,CAACoB,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAAKxD,OAAA;QAAAQ,QAAA,GAAe,GAAC,EAAC+C,GAAG;MAAA,GAAZC,KAAK;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,CAAC,eACtEpB,OAAA,CAACN,aAAa;QACZ+D,aAAa,EAAE,CAAC9D,SAAS,CAAE;QAC3B+D,UAAU,EAAE;UAAEC,IAAI,EAAEvD,SAAS;UAAEwD,GAAG,EAAEtC;QAAM,CAAE;QAAAd,QAAA,EAE3CyB,IAAI,CAAC4B;MAAO;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACL2B,QAAQ,iBACP/C,OAAA,CAAC8D,GAAG;MAACC,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACH,QAAQ,CAACD,GAAG,CAAE;MAAAtC,QAAA,GAAC,sBACrC,EAACuC,QAAQ,CAACK,KAAK;IAAA;MAAAnC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN,EACA4B,QAAQ,iBACPhD,OAAA,CAAC8D,GAAG;MAACC,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACF,QAAQ,CAACF,GAAG,CAAE;MAAAtC,QAAA,GAAC,sBACrC,EAACwC,QAAQ,CAACI,KAAK;IAAA;MAAAnC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACS,EAAA,CAlDID,WAAW;EAAA,QACIrC,SAAS;AAAA;AAAAyE,GAAA,GADxBpC,WAAW;AAoDjB,MAAMkC,GAAG,GAAGA,CAAC;EAAEtD;AAAS,CAAC,kBACvBR,OAAA;EACEY,KAAK,EAAE;IAAEqD,MAAM,EAAE,iBAAiB;IAAEC,OAAO,EAAE,MAAM;IAAEC,SAAS,EAAE;EAAO,CAAE;EAAA3D,QAAA,EAExEA;AAAQ;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACN;AAACgD,GAAA,GANIN,GAAG;AAQT,eAAelC,WAAW;AAAC,IAAAzB,EAAA,EAAAkB,GAAA,EAAAM,GAAA,EAAAqC,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAlE,EAAA;AAAAkE,YAAA,CAAAhD,GAAA;AAAAgD,YAAA,CAAA1C,GAAA;AAAA0C,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}