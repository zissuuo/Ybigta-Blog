{"ast":null,"code":"var _jsxFileName = \"/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport HeaderComponent from '../ui/HeaderComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst ImgTagBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 40px;\n    margin-bottom: 30px;\n`;\n_c2 = ImgTagBox;\nconst BackgroundImg = styled.div`\n    width: 100%;\n    height: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-image: url('${process.env.PUBLIC_URL}/background.JPG');\n    background-size: cover;\n    background-position: center;\n    opacity: 0.5;\n    color: white;\n    font-family: 'Pretendard-ExtraBold';\n    font-size: 60px;\n    text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n_c3 = BackgroundImg;\nconst PostCategoryContainer = styled.div`\n    display: flex;\n    padding-top: 30px;\n    padding-left: 90px;\n    padding-right: 90px;\n    flex-direction: row;\n    align-items: flex-start;\n    gap: 50px;\n    justify-content: center; /* 추가: 자식 요소들이 중앙에 위치하도록 함 */\n`;\n_c4 = PostCategoryContainer;\nconst TagContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    width: 600px;\n    gap: 15px 7px;\n`;\n_c5 = TagContainer;\nconst CategoryContainer = styled.div`\n    display: flex;\n    min-width: 300px; /* 최소 너비 설정 */\n    max-width: 300px; /* 최대 너비 설정 */\n    flex-direction: column;\n    gap: 9px;\n`;\n_c6 = CategoryContainer;\nconst Tags = styled.span`\n    padding-left: 12px;\n    padding-right: 12px;\n    display: flex;\n    height: 30px;\n    cursor: pointer;\n    background-color: #EBEBEB;\n    color: ${props => props.isSelected ? '#3b82f6' : '#666666'}; /* 조건부 색상 적용 */\n    text-align: center;\n    font-family: 'Pretendard-SemiBold';\n    font-size: 13px;\n    justify-content: center;\n    align-items: center; /* 이 줄을 추가하세요 */\n    border-radius: 30px;\n    transition: color 0.1s ease;\n    &:hover {\n        color: #3b82f6;\n    }\n`;\n_c7 = Tags;\nconst SearchForm = styled.form`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n`;\n_c8 = SearchForm;\nconst SearchInput = styled.input`\n    height: 30px;\n    padding-left: 10px;\n    border-radius: 15px;\n    border: none;\n    box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n    font-family: 'Pretendard-Medium';\n`;\n_c9 = SearchInput;\nconst SearchButton = styled.button`\n  padding: 5px 10px;\n  border-radius: 15px;\n  border: none;\n  background-color: #EBEBEB;\n  color: #666666;\n  cursor: pointer;\n  margin-left: 10px;\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n_c10 = SearchButton;\nconst PostWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 750px; /* 최소 너비 설정 */\n    max-width: 750px; /* 최대 너비 설정 */\n    gap: 16px;\n    padding-bottom: 20px;\n    margin-bottom: 20px;\n`;\n_c11 = PostWrapper;\nconst PostContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 750px;\n    gap: 16px;\n    padding-bottom: 40px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #d4d4d4;\n`;\n_c12 = PostContainer;\nconst InnerTagContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n_c13 = InnerTagContainer;\nconst PostTitle = styled.span`\n    font-family: 'Pretendard-ExtraBold';\n    font-size: 23px;\n    cursor: pointer;\n    transition: color 0.1s ease;\n    &:hover {\n        color: #666666;\n    }\n`;\n_c14 = PostTitle;\nconst Category = styled.span`\n    font-family: 'Pretendard-Medium';\n    cursor: pointer;\n    color: ${props => props.isSelected ? '#3b82f6' : '#252a2f'};\n    transition: color 0.1s ease;\n    &:hover {\n        color: #3b82f6;\n    }\n`;\n_c15 = Category;\nconst BlogListPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 필터링 초기화\n  const resetFilters = () => {\n    setSelectedTags([]);\n    setSelectedCategory('');\n    setSearchParams({});\n  };\n\n  // 날짜 정렬\n  const sortPostsByDate = posts => {\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // 검색 실행 함수\n  const executeSearch = e => {\n    e.preventDefault(); // 폼 기본 제출 이벤트 방지\n    setSearchParams({\n      ...Object.fromEntries(searchParams.entries()),\n      search: searchQuery\n    });\n  };\n\n  // 검색어 입력 처리 저장\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value); // 입력된 검색어를 로컬 상태로 저장\n  };\n\n  // 초기 포스트 페이지 로딩\n  useEffect(() => {\n    fetch('http://localhost:8000/posts/').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      return response.json();\n    }).then(data => {\n      const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n      setPosts(sortedPosts);\n      // setPosts(data);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\n  useEffect(() => {\n    // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\n    const tagsFromURL = searchParams.get('tags');\n    const categoryFromURL = searchParams.get('cat');\n    const searchQueryFromURL = searchParams.get('search');\n\n    // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\n    const tagsArray = tagsFromURL ? tagsFromURL.split('&') : [];\n    const category = categoryFromURL ? categoryFromURL : '';\n\n    // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\n    setSelectedTags(tagsArray);\n    setSelectedCategory(category);\n    setSearchQuery(searchQueryFromURL || '');\n  }, [searchParams]); // searchParams 변화 감지\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const handlePostClick = postId => {\n    navigate(`/posts/${postId}`);\n  };\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 태그 다중선택 처리\n  const handleTagChange = tag => {\n    const newSelectedTags = selectedTags.includes(tag) ? selectedTags.filter(t => t !== tag) : [...selectedTags, tag];\n    setSelectedTags(newSelectedTags);\n    setSearchParams({\n      tags: newSelectedTags.join('&'),\n      cat: selectedCategory\n    });\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = category => {\n    const isDeselecting = selectedCategory === category || category === 'ALL';\n    const newCategory = isDeselecting ? '' : category;\n    setSelectedCategory(newCategory);\n    if (newCategory === '') {\n      setSearchParams(selectedTags.length > 0 ? {\n        tags: selectedTags.join('&')\n      } : {});\n    } else {\n      setSearchParams({\n        tags: selectedTags.join('&'),\n        cat: newCategory\n      });\n    }\n  };\n\n  // posts Data 필터링\n  const filteredPosts = posts.filter(post => {\n    const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\n    const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\n    const matchesSearchQuery = searchParams.get('search') ? post.title.toLowerCase().includes(searchParams.get('search').toLowerCase()) || post.content.toLowerCase().includes(searchParams.get('search').toLowerCase()) : true;\n    return hasSelectedTags && hasSelectedCategory && matchesSearchQuery;\n  });\n\n  // 태그, 카테고리 중복 제거 및 오름차순 정렬\n  const uniqueTags = [...new Set(posts.flatMap(post => post.tags))].sort();\n  const uniqueCategories = [...new Set(posts.map(post => post.categories))].sort();\n\n  //if (loading) return <div>Loading...</div>\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ImgTagBox, {\n        children: [/*#__PURE__*/_jsxDEV(BackgroundImg, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Shape the Future of Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"with a Community of Enthusiasts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n          children: uniqueTags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n            onClick: () => handleTagChange(tag),\n            isSelected: selectedTags.includes(tag),\n            children: tag\n          }, tagIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostCategoryContainer, {\n        children: [/*#__PURE__*/_jsxDEV(PostWrapper, {\n          children: [filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostContainer, {\n            children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n              onClick: () => handlePostClick(post._id),\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.profileImagePath,\n                alt: \"Author's profile\",\n                style: {\n                  width: '30px',\n                  height: '30px',\n                  borderRadius: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontFamily: 'Pretendard-Medium',\n                  color: '#252a2f',\n                  marginLeft: '20px'\n                },\n                children: post.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontFamily: 'Pretendard-Medium',\n                  color: '#666666',\n                  marginLeft: '20px'\n                },\n                children: new Date(post.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: 'Pretendard-Medium',\n                color: '#666666'\n              },\n              children: post.outline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InnerTagContainer, {\n              children: post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n                onClick: event => handleTagClick(tag, event),\n                style: {\n                  marginRight: \"10px\",\n                  cursor: 'pointer',\n                  gap: \"10px\"\n                },\n                children: tag\n              }, tagIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this)), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: 'Pretendard-SemiBold',\n                color: '#666666',\n                fontSize: '21px'\n              },\n              children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uB0B4\\uC6A9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4 \\uD83D\\uDE05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontFamily: 'Pretendard-Medium',\n                color: '#666666'\n              },\n              children: \"\\uB2E4\\uB978 \\uD0DC\\uADF8\\uC640 \\uCE74\\uD14C\\uACE0\\uB9AC\\uB85C \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n            onSubmit: executeSearch,\n            children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchInputChange // 변경된 핸들러 사용\n              ,\n              placeholder: \"Search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n              type: \"submit\",\n              children: \"\\uD83D\\uDD0E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: 'pointer',\n              fontFamily: 'Pretendard-ExtraBold',\n              fontSize: '23px'\n            },\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }, this), uniqueCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n            onClick: () => handleCategoryChange(category),\n            isSelected: selectedCategory === category,\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogListPage, \"R89yakMiIqgAts9kyeCGMtJhM+M=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c16 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ImgTagBox\");\n$RefreshReg$(_c3, \"BackgroundImg\");\n$RefreshReg$(_c4, \"PostCategoryContainer\");\n$RefreshReg$(_c5, \"TagContainer\");\n$RefreshReg$(_c6, \"CategoryContainer\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"SearchForm\");\n$RefreshReg$(_c9, \"SearchInput\");\n$RefreshReg$(_c10, \"SearchButton\");\n$RefreshReg$(_c11, \"PostWrapper\");\n$RefreshReg$(_c12, \"PostContainer\");\n$RefreshReg$(_c13, \"InnerTagContainer\");\n$RefreshReg$(_c14, \"PostTitle\");\n$RefreshReg$(_c15, \"Category\");\n$RefreshReg$(_c16, \"BlogListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","styled","createGlobalStyle","HeaderComponent","jsxDEV","_jsxDEV","Wrapper","div","_c","ImgTagBox","_c2","BackgroundImg","process","env","PUBLIC_URL","_c3","PostCategoryContainer","_c4","TagContainer","_c5","CategoryContainer","_c6","Tags","span","props","isSelected","_c7","SearchForm","form","_c8","SearchInput","input","_c9","SearchButton","button","_c10","PostWrapper","_c11","PostContainer","_c12","InnerTagContainer","_c13","PostTitle","_c14","Category","_c15","BlogListPage","_s","loading","setLoading","error","setError","posts","setPosts","selectedTags","setSelectedTags","selectedCategory","setSelectedCategory","searchParams","setSearchParams","searchQuery","setSearchQuery","navigate","resetFilters","sortPostsByDate","sort","a","b","Date","createdAt","executeSearch","e","preventDefault","Object","fromEntries","entries","search","handleSearchInputChange","event","target","value","fetch","then","response","ok","Error","json","data","sortedPosts","catch","message","finally","tagsFromURL","get","categoryFromURL","searchQueryFromURL","tagsArray","split","category","handlePostClick","postId","handleTagClick","tag","stopPropagation","handleTagChange","newSelectedTags","includes","filter","t","tags","join","cat","handleCategoryChange","isDeselecting","newCategory","length","filteredPosts","post","hasSelectedTags","every","hasSelectedCategory","categories","matchesSearchQuery","title","toLowerCase","content","uniqueTags","Set","flatMap","uniqueCategories","map","children","fileName","_jsxFileName","lineNumber","columnNumber","tagIndex","onClick","index","_id","style","display","alignItems","gap","src","profileImagePath","alt","width","height","borderRadius","fontFamily","color","marginLeft","author","toLocaleDateString","outline","marginRight","cursor","flexDirection","fontSize","onSubmit","type","onChange","placeholder","_c16","$RefreshReg$"],"sources":["/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport HeaderComponent from '../ui/HeaderComponent';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst ImgTagBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 40px;\n    margin-bottom: 30px;\n`;\n\nconst BackgroundImg = styled.div`\n    width: 100%;\n    height: 300px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-image: url('${process.env.PUBLIC_URL}/background.JPG');\n    background-size: cover;\n    background-position: center;\n    opacity: 0.5;\n    color: white;\n    font-family: 'Pretendard-ExtraBold';\n    font-size: 60px;\n    text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n\n\nconst PostCategoryContainer = styled.div`\n    display: flex;\n    padding-top: 30px;\n    padding-left: 90px;\n    padding-right: 90px;\n    flex-direction: row;\n    align-items: flex-start;\n    gap: 50px;\n    justify-content: center; /* 추가: 자식 요소들이 중앙에 위치하도록 함 */\n`;\n\nconst TagContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    width: 600px;\n    gap: 15px 7px;\n`;\n\nconst CategoryContainer = styled.div`\n    display: flex;\n    min-width: 300px; /* 최소 너비 설정 */\n    max-width: 300px; /* 최대 너비 설정 */\n    flex-direction: column;\n    gap: 9px;\n`;\n\nconst Tags = styled.span`\n    padding-left: 12px;\n    padding-right: 12px;\n    display: flex;\n    height: 30px;\n    cursor: pointer;\n    background-color: #EBEBEB;\n    color: ${props => props.isSelected ? '#3b82f6' : '#666666'}; /* 조건부 색상 적용 */\n    text-align: center;\n    font-family: 'Pretendard-SemiBold';\n    font-size: 13px;\n    justify-content: center;\n    align-items: center; /* 이 줄을 추가하세요 */\n    border-radius: 30px;\n    transition: color 0.1s ease;\n    &:hover {\n        color: #3b82f6;\n    }\n`;\n\nconst SearchForm = styled.form`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n`;\n\nconst SearchInput = styled.input`\n    height: 30px;\n    padding-left: 10px;\n    border-radius: 15px;\n    border: none;\n    box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n    font-family: 'Pretendard-Medium';\n`;\n\nconst SearchButton = styled.button`\n  padding: 5px 10px;\n  border-radius: 15px;\n  border: none;\n  background-color: #EBEBEB;\n  color: #666666;\n  cursor: pointer;\n  margin-left: 10px;\n  box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.1);\n`;\n\nconst PostWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 750px; /* 최소 너비 설정 */\n    max-width: 750px; /* 최대 너비 설정 */\n    gap: 16px;\n    padding-bottom: 20px;\n    margin-bottom: 20px;\n`;\n\nconst PostContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-width: 750px;\n    gap: 16px;\n    padding-bottom: 40px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #d4d4d4;\n`;\n\nconst InnerTagContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`\nconst PostTitle = styled.span`\n    font-family: 'Pretendard-ExtraBold';\n    font-size: 23px;\n    cursor: pointer;\n    transition: color 0.1s ease;\n    &:hover {\n        color: #666666;\n    }\n`;\n\nconst Category = styled.span`\n    font-family: 'Pretendard-Medium';\n    cursor: pointer;\n    color: ${props => props.isSelected ? '#3b82f6' : '#252a2f'};\n    transition: color 0.1s ease;\n    &:hover {\n        color: #3b82f6;\n    }\n`;\n\n  \nconst BlogListPage = () => {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [posts, setPosts] = useState([]); \n    const [selectedTags, setSelectedTags] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchQuery, setSearchQuery] = useState('');\n\n    // 페이지 이동\n    const navigate = useNavigate(); \n\n    // 필터링 초기화\n    const resetFilters = () => {\n        setSelectedTags([]);\n        setSelectedCategory('');\n        setSearchParams({});\n    };\n\n    // 날짜 정렬\n    const sortPostsByDate = (posts) => {\n        return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    };\n\n    // 검색 실행 함수\n    const executeSearch = (e) => {\n        e.preventDefault(); // 폼 기본 제출 이벤트 방지\n        setSearchParams({ ...Object.fromEntries(searchParams.entries()), search: searchQuery });\n    };\n\n    // 검색어 입력 처리 저장\n    const handleSearchInputChange = (event) => {\n        setSearchQuery(event.target.value); // 입력된 검색어를 로컬 상태로 저장\n    };\n\n\n    // 초기 포스트 페이지 로딩\n    useEffect(() => {\n        fetch('http://localhost:8000/posts/')\n        .then(response => {\n            if (!response.ok) {\n            throw new Error('Failed to fetch posts');\n            }\n            return response.json();\n        })\n        .then(data => {\n            const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n            setPosts(sortedPosts);\n            // setPosts(data);\n        })\n        .catch(error => {\n            setError(error.message);\n        })\n        .finally(() => {\n            setLoading(false);\n        });\n    }, []);\n\n    // URL 쿼리 파라미터 값 변화에 따라 바로 렌더링하기\n    useEffect(() => {\n        // URL에서 tags와 cat 쿼리 파라미터 값 읽어오기\n        const tagsFromURL = searchParams.get('tags');\n        const categoryFromURL = searchParams.get('cat');\n        const searchQueryFromURL = searchParams.get('search');\n    \n        // 쿼리 파라미터가 없는 경우 빈 배열 또는 빈 문자열로 초기화\n        const tagsArray = tagsFromURL ? tagsFromURL.split('&') : [];\n        const category = categoryFromURL ? categoryFromURL : '';\n    \n        // 컴포넌트 상태를 URL의 쿼리 파라미터에 맞게 업데이트\n        setSelectedTags(tagsArray);\n        setSelectedCategory(category);\n        setSearchQuery(searchQueryFromURL || '');\n    }, [searchParams]); // searchParams 변화 감지\n\n\n    // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n    const handlePostClick = (postId) => {\n        navigate(`/posts/${postId}`); \n    };\n\n    // 태그 단일선택 처리 (공통사용)\n    const handleTagClick = (tag, event) => {\n        event.stopPropagation();\n        navigate(`/?tags=${tag}`);\n    };\n\n    // 태그 다중선택 처리\n    const handleTagChange = (tag) => {\n        const newSelectedTags = selectedTags.includes(tag) \n            ? selectedTags.filter(t => t !== tag) \n            : [...selectedTags, tag];\n        setSelectedTags(newSelectedTags);\n        setSearchParams({ tags: newSelectedTags.join('&'), cat: selectedCategory });\n    };\n\n    // 카테고리 선택 처리\n    const handleCategoryChange = (category) => {\n        const isDeselecting = selectedCategory === category || category === 'ALL';\n        const newCategory = isDeselecting ? '' : category; \n        setSelectedCategory(newCategory);\n    \n        if (newCategory === '') {\n            setSearchParams(selectedTags.length > 0 ? { tags: selectedTags.join('&') } : {});\n        } else {\n            setSearchParams({ tags: selectedTags.join('&'), cat: newCategory });\n        }\n    };\n\n    // posts Data 필터링\n    const filteredPosts = posts.filter(post => {\n        const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\n        const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\n        const matchesSearchQuery = searchParams.get('search') ? \n            post.title.toLowerCase().includes(searchParams.get('search').toLowerCase()) || \n            post.content.toLowerCase().includes(searchParams.get('search').toLowerCase()) : true;\n        return hasSelectedTags && hasSelectedCategory && matchesSearchQuery;\n    });\n\n    // 태그, 카테고리 중복 제거 및 오름차순 정렬\n    const uniqueTags = [...new Set(posts.flatMap(post => post.tags))].sort();\n    const uniqueCategories = [...new Set(posts.map(post => post.categories))].sort();\n    \n    //if (loading) return <div>Loading...</div>\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n    <div>\n        <HeaderComponent />\n        <Wrapper>\n        <ImgTagBox>\n            <BackgroundImg>\n                <span>\n                    Shape the Future of Data\n                </span>\n                <span>\n                    with a Community of Enthusiasts\n                </span>\n            </BackgroundImg>\n\n            {/* 태그 렌더링 - 다중 선택 */}\n            <TagContainer>\n                {uniqueTags.map((tag, tagIndex) => (\n                    <Tags key={tagIndex} onClick={() => handleTagChange(tag)} isSelected={selectedTags.includes(tag)}>\n                        {tag}\n                    </Tags>\n   \n                ))}\n            </TagContainer>\n        </ImgTagBox>\n\n\n            {/* 포스트 목록 렌더링 및 각종 click 이동 이벤트 */}\n            <PostCategoryContainer>\n                <PostWrapper>\n                {filteredPosts.map((post, index) => (\n                    <PostContainer key={index}>\n                        {/* 제목 클릭 시 포스트로 이동 */}\n                        <PostTitle onClick={() => handlePostClick(post._id)}> \n                            {post.title} \n                        </PostTitle>\n\n                        {/* 작성자, 프사, 날짜, 아웃라인 */}\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '10px'}}>\n                            <img src={post.profileImagePath} alt=\"Author's profile\" style={{ width: '30px', height: '30px', borderRadius: '50%' }} />\n                            <span style={{ fontFamily: 'Pretendard-Medium', color: '#252a2f', marginLeft: '20px'}}>\n                                {post.author}\n                            </span>\n                            <span style={{ fontFamily: 'Pretendard-Medium', color: '#666666', marginLeft: '20px' }}>\n                                {new Date(post.createdAt).toLocaleDateString()}\n                            </span>\n                        </div>\n                        <span style={{ fontFamily: 'Pretendard-Medium', color: '#666666'}}>\n                            {post.outline}\n                        </span>\n\n                        {/* 태그 및 단일 필터링 */}\n                        <InnerTagContainer>\n                            {post.tags.map((tag, tagIndex) => (\n                                <Tags key={tagIndex} onClick={(event) => handleTagClick(tag, event)} style={{marginRight: \"10px\", cursor: 'pointer', gap: \"10px\" }}>\n                                    {tag}\n                                </Tags>\n                            ))}\n                        </InnerTagContainer>\n                    </PostContainer>\n                ))}\n                {filteredPosts.length === 0 &&\n                    <div style={{display:'flex', flexDirection: 'column', gap:'10px'}}>\n                        <span style={{fontFamily: 'Pretendard-SemiBold', color: '#666666', fontSize: '21px'}}>검색 결과에 해당하는 내용이 없습니다 😅</span>\n                        <span style={{fontFamily: 'Pretendard-Medium', color: '#666666'}}>다른 태그와 카테고리로 검색해보세요</span>\n                    </div>}\n                </PostWrapper>\n\n                {/* 카테고리 버튼 검색 기능 렌더링 */}\n                <CategoryContainer>\n                    <SearchForm onSubmit={executeSearch}>\n                        <SearchInput\n                            type=\"text\"\n                            value={searchQuery}\n                            onChange={handleSearchInputChange} // 변경된 핸들러 사용\n                            placeholder=\"Search...\"\n                        />\n                        <SearchButton type=\"submit\">🔎</SearchButton>\n                    </SearchForm>\n                    <span style={{cursor: 'pointer', fontFamily: 'Pretendard-ExtraBold', fontSize: '23px'}}>\n                        Category\n                    </span>\n                        {uniqueCategories.map((category, index) => (\n                            <Category key={index} onClick={() => handleCategoryChange(category)} isSelected={selectedCategory === category}>\n                                {category}\n                            </Category>\n                        ))}\n                </CategoryContainer>\n            </PostCategoryContainer>\n        </Wrapper>\n        </div>\n        );\n      \n};\n\nexport default BlogListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}