{"ast":null,"code":"/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').ImageReference} ImageReference\r\n * @typedef {import('../state.js').State} State\r\n */\n\nimport { normalizeUri } from 'micromark-util-sanitize-uri';\nimport { revert } from '../revert.js';\n\n/**\r\n * Turn an mdast `imageReference` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ImageReference} node\r\n *   mdast node.\r\n * @returns {Array<ElementContent> | ElementContent}\r\n *   hast node.\r\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase();\n  const def = state.definitionById.get(id);\n  if (!def) {\n    return revert(state, node);\n  }\n\n  /** @type {Properties} */\n  const properties = {\n    src: normalizeUri(def.url || ''),\n    alt: node.alt\n  };\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title;\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'img',\n    properties,\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["normalizeUri","revert","imageReference","state","node","id","String","identifier","toUpperCase","def","definitionById","get","properties","src","url","alt","title","undefined","result","type","tagName","children","patch","applyData"],"sources":["E:/Documents/2024-1 YBIGTA/React/blog_git/Ybigta-Blog/frontend/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"],"sourcesContent":["/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('mdast').ImageReference} ImageReference\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\r\nimport {revert} from '../revert.js'\r\n\r\n/**\r\n * Turn an mdast `imageReference` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {ImageReference} node\r\n *   mdast node.\r\n * @returns {Array<ElementContent> | ElementContent}\r\n *   hast node.\r\n */\r\nexport function imageReference(state, node) {\r\n  const id = String(node.identifier).toUpperCase()\r\n  const def = state.definitionById.get(id)\r\n\r\n  if (!def) {\r\n    return revert(state, node)\r\n  }\r\n\r\n  /** @type {Properties} */\r\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\r\n\r\n  if (def.title !== null && def.title !== undefined) {\r\n    properties.title = def.title\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {type: 'element', tagName: 'img', properties, children: []}\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,YAAY,QAAO,6BAA6B;AACxD,SAAQC,MAAM,QAAO,cAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC1C,MAAMC,EAAE,GAAGC,MAAM,CAACF,IAAI,CAACG,UAAU,CAAC,CAACC,WAAW,CAAC,CAAC;EAChD,MAAMC,GAAG,GAAGN,KAAK,CAACO,cAAc,CAACC,GAAG,CAACN,EAAE,CAAC;EAExC,IAAI,CAACI,GAAG,EAAE;IACR,OAAOR,MAAM,CAACE,KAAK,EAAEC,IAAI,CAAC;EAC5B;;EAEA;EACA,MAAMQ,UAAU,GAAG;IAACC,GAAG,EAAEb,YAAY,CAACS,GAAG,CAACK,GAAG,IAAI,EAAE,CAAC;IAAEC,GAAG,EAAEX,IAAI,CAACW;EAAG,CAAC;EAEpE,IAAIN,GAAG,CAACO,KAAK,KAAK,IAAI,IAAIP,GAAG,CAACO,KAAK,KAAKC,SAAS,EAAE;IACjDL,UAAU,CAACI,KAAK,GAAGP,GAAG,CAACO,KAAK;EAC9B;;EAEA;EACA,MAAME,MAAM,GAAG;IAACC,IAAI,EAAE,SAAS;IAAEC,OAAO,EAAE,KAAK;IAAER,UAAU;IAAES,QAAQ,EAAE;EAAE,CAAC;EAC1ElB,KAAK,CAACmB,KAAK,CAAClB,IAAI,EAAEc,MAAM,CAAC;EACzB,OAAOf,KAAK,CAACoB,SAAS,CAACnB,IAAI,EAAEc,MAAM,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}