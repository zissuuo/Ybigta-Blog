{"ast":null,"code":"/**\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('mdast').Parents} Parents\r\n * @typedef {import('../types.js').Info} Info\r\n * @typedef {import('../types.js').Map} Map\r\n * @typedef {import('../types.js').State} State\r\n */\n\nimport { checkBullet } from '../util/check-bullet.js';\nimport { checkListItemIndent } from '../util/check-list-item-indent.js';\n\n/**\r\n * @param {ListItem} node\r\n * @param {Parents | undefined} parent\r\n * @param {State} state\r\n * @param {Info} info\r\n * @returns {string}\r\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state);\n  let bullet = state.bulletCurrent || checkBullet(state);\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet = (typeof parent.start === 'number' && parent.start > -1 ? parent.start : 1) + (state.options.incrementListMarker === false ? 0 : parent.children.indexOf(node)) + bullet;\n  }\n  let size = bullet.length + 1;\n  if (listItemIndent === 'tab' || listItemIndent === 'mixed' && (parent && parent.type === 'list' && parent.spread || node.spread)) {\n    size = Math.ceil(size / 4) * 4;\n  }\n  const tracker = state.createTracker(info);\n  tracker.move(bullet + ' '.repeat(size - bullet.length));\n  tracker.shift(size);\n  const exit = state.enter('listItem');\n  const value = state.indentLines(state.containerFlow(node, tracker.current()), map);\n  exit();\n  return value;\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line;\n    }\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line;\n  }\n}","map":{"version":3,"names":["checkBullet","checkListItemIndent","listItem","node","parent","state","info","listItemIndent","bullet","bulletCurrent","type","ordered","start","options","incrementListMarker","children","indexOf","size","length","spread","Math","ceil","tracker","createTracker","move","repeat","shift","exit","enter","value","indentLines","containerFlow","current","map","line","index","blank"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/node_modules/mdast-util-to-markdown/lib/handle/list-item.js"],"sourcesContent":["/**\r\n * @typedef {import('mdast').ListItem} ListItem\r\n * @typedef {import('mdast').Parents} Parents\r\n * @typedef {import('../types.js').Info} Info\r\n * @typedef {import('../types.js').Map} Map\r\n * @typedef {import('../types.js').State} State\r\n */\r\n\r\nimport {checkBullet} from '../util/check-bullet.js'\r\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\r\n\r\n/**\r\n * @param {ListItem} node\r\n * @param {Parents | undefined} parent\r\n * @param {State} state\r\n * @param {Info} info\r\n * @returns {string}\r\n */\r\nexport function listItem(node, parent, state, info) {\r\n  const listItemIndent = checkListItemIndent(state)\r\n  let bullet = state.bulletCurrent || checkBullet(state)\r\n\r\n  // Add the marker value for ordered lists.\r\n  if (parent && parent.type === 'list' && parent.ordered) {\r\n    bullet =\r\n      (typeof parent.start === 'number' && parent.start > -1\r\n        ? parent.start\r\n        : 1) +\r\n      (state.options.incrementListMarker === false\r\n        ? 0\r\n        : parent.children.indexOf(node)) +\r\n      bullet\r\n  }\r\n\r\n  let size = bullet.length + 1\r\n\r\n  if (\r\n    listItemIndent === 'tab' ||\r\n    (listItemIndent === 'mixed' &&\r\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\r\n  ) {\r\n    size = Math.ceil(size / 4) * 4\r\n  }\r\n\r\n  const tracker = state.createTracker(info)\r\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\r\n  tracker.shift(size)\r\n  const exit = state.enter('listItem')\r\n  const value = state.indentLines(\r\n    state.containerFlow(node, tracker.current()),\r\n    map\r\n  )\r\n  exit()\r\n\r\n  return value\r\n\r\n  /** @type {Map} */\r\n  function map(line, index, blank) {\r\n    if (index) {\r\n      return (blank ? '' : ' '.repeat(size)) + line\r\n    }\r\n\r\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,WAAW,QAAO,yBAAyB;AACnD,SAAQC,mBAAmB,QAAO,mCAAmC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAClD,MAAMC,cAAc,GAAGN,mBAAmB,CAACI,KAAK,CAAC;EACjD,IAAIG,MAAM,GAAGH,KAAK,CAACI,aAAa,IAAIT,WAAW,CAACK,KAAK,CAAC;;EAEtD;EACA,IAAID,MAAM,IAAIA,MAAM,CAACM,IAAI,KAAK,MAAM,IAAIN,MAAM,CAACO,OAAO,EAAE;IACtDH,MAAM,GACJ,CAAC,OAAOJ,MAAM,CAACQ,KAAK,KAAK,QAAQ,IAAIR,MAAM,CAACQ,KAAK,GAAG,CAAC,CAAC,GAClDR,MAAM,CAACQ,KAAK,GACZ,CAAC,KACJP,KAAK,CAACQ,OAAO,CAACC,mBAAmB,KAAK,KAAK,GACxC,CAAC,GACDV,MAAM,CAACW,QAAQ,CAACC,OAAO,CAACb,IAAI,CAAC,CAAC,GAClCK,MAAM;EACV;EAEA,IAAIS,IAAI,GAAGT,MAAM,CAACU,MAAM,GAAG,CAAC;EAE5B,IACEX,cAAc,KAAK,KAAK,IACvBA,cAAc,KAAK,OAAO,KACvBH,MAAM,IAAIA,MAAM,CAACM,IAAI,KAAK,MAAM,IAAIN,MAAM,CAACe,MAAM,IAAKhB,IAAI,CAACgB,MAAM,CAAE,EACvE;IACAF,IAAI,GAAGG,IAAI,CAACC,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;EAChC;EAEA,MAAMK,OAAO,GAAGjB,KAAK,CAACkB,aAAa,CAACjB,IAAI,CAAC;EACzCgB,OAAO,CAACE,IAAI,CAAChB,MAAM,GAAG,GAAG,CAACiB,MAAM,CAACR,IAAI,GAAGT,MAAM,CAACU,MAAM,CAAC,CAAC;EACvDI,OAAO,CAACI,KAAK,CAACT,IAAI,CAAC;EACnB,MAAMU,IAAI,GAAGtB,KAAK,CAACuB,KAAK,CAAC,UAAU,CAAC;EACpC,MAAMC,KAAK,GAAGxB,KAAK,CAACyB,WAAW,CAC7BzB,KAAK,CAAC0B,aAAa,CAAC5B,IAAI,EAAEmB,OAAO,CAACU,OAAO,CAAC,CAAC,CAAC,EAC5CC,GACF,CAAC;EACDN,IAAI,CAAC,CAAC;EAEN,OAAOE,KAAK;;EAEZ;EACA,SAASI,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC/B,IAAID,KAAK,EAAE;MACT,OAAO,CAACC,KAAK,GAAG,EAAE,GAAG,GAAG,CAACX,MAAM,CAACR,IAAI,CAAC,IAAIiB,IAAI;IAC/C;IAEA,OAAO,CAACE,KAAK,GAAG5B,MAAM,GAAGA,MAAM,GAAG,GAAG,CAACiB,MAAM,CAACR,IAAI,GAAGT,MAAM,CAACU,MAAM,CAAC,IAAIgB,IAAI;EAC5E;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}