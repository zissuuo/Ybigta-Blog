{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjalr\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\ybigta\\\\ybigta_blog_2\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport HeaderComponent from \"../ui/HeaderComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h2`\n  font-size: 40px; // 크기는 이미지에 맞춰 조정하세요.\n  margin-bottom: 0; // 제목과 날짜 사이의 간격을 줄입니다.\n`;\n_c = Title;\nconst Divider = styled.hr`\n  border: none;\n  height: 1px;\n  background-color: #ced4da;\n  margin-top: 40px; // 구분선 위의 간격을 조정하세요.\n  margin-bottom: 40px; // 구분선 아래의 간격을 조정하세요.\n`;\n_c2 = Divider;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n_c3 = Wrapper;\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\n_c4 = Tags;\nconst Categories = styled.span`\n  margin: \"0 25px\",\n  fontWeight: \"bold\",\n  color: \"blue\"\n`;\n_c5 = Categories;\nconst CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  //width: 600px;\n  gap: 7px;\n`;\n_c6 = CategoryContainer;\nconst CodeBlock = ({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) => {\n  const match = /language-(\\w+)/.exec(className || \"\");\n  return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    style: prism,\n    language: match[1],\n    PreTag: \"div\",\n    ...props,\n    children: String(children).replace(/\\n$/, \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n    className: className,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c7 = CodeBlock;\nconst Image = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  ...props,\n  style: {\n    flex: \"column\",\n    maxWidth: \"auto\",\n    height: \"450px\",\n    justifyItems: \"center\"\n  } // 이 부분을 조정하여 이미지 크기 스타일을 적용\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n_c8 = Image;\nconst ContentPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams(); // URL에서 postId를 추출\n  console.log(postId);\n  const [post, setPost] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\n    .then(response => response.json()).then(data => setPost(data)).catch(error => console.log(error));\n    fetch(`http://localhost:8000/posts`) // 모든 posts를 가져옵니다.\n    .then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, [postId]);\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = category => {\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\n    const newCategory = isDeselecting ? \"\" : category;\n    setSelectedCategory(newCategory);\n    navigate(\"/\" + (newCategory ? `?cat=${newCategory}` : \"\"));\n  };\n  const uniqueCategories = [...new Set(posts.map(post => post.categories))];\n  if (!post || !posts.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 38\n  }, this);\n\n  // 현재 포스트의 인덱스를 찾음\n  const currentIndex = posts.findIndex(p => p._id === postId);\n\n  // 이전 포스트와 다음 포스트를 결정\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\n  const nextPost = currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\n  const goToPost = postId => {\n    navigate(`/posts/${postId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: uniqueCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Categories, {\n        onClick: () => handleCategoryChange(category),\n        children: category\n      }, inded, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px 0 5px 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\",\n          color: \"gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.profileImagePath,\n          alt: \"Author's profile\",\n          style: {\n            width: \"30px\",\n            height: \"30px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: \"0 25px\",\n            fontWeight: \"bold\",\n            color: \"lightgray\"\n          },\n          children: new Date(post.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: event => handleTagClick(tag, event),\n        style: {\n          marginRight: \"15px\",\n          cursor: \"pointer\",\n          gap: \"10px\"\n        },\n        children: [\"#\", tag]\n      }, tagIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.outline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        remarkPlugins: [remarkGfm],\n        components: {\n          code: CodeBlock,\n          img: Image\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => navigate(\"/\"),\n      children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), prevPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(prevPost._id),\n      children: [\"\\uC774\\uC804\\uAE00: \", prevPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), nextPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(nextPost._id),\n      children: [\"\\uB2E4\\uC74C\\uAE00: \", nextPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"D4yq4E0RnPY3gTyG6J0q0EOPWSs=\", false, function () {\n  return [useParams, useNavigate, useSearchParams];\n});\n_c9 = ContentPage;\nconst Box = ({\n  children,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  style: {\n    border: \"1px solid black\",\n    padding: \"20px\",\n    marginTop: \"20px\",\n    cursor: \"pointer\"\n  },\n  onClick: onClick,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 230,\n  columnNumber: 3\n}, this);\n_c10 = Box;\nexport default ContentPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Divider\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"Tags\");\n$RefreshReg$(_c5, \"Categories\");\n$RefreshReg$(_c6, \"CategoryContainer\");\n$RefreshReg$(_c7, \"CodeBlock\");\n$RefreshReg$(_c8, \"Image\");\n$RefreshReg$(_c9, \"ContentPage\");\n$RefreshReg$(_c10, \"Box\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","styled","ReactMarkdown","remarkGfm","Prism","SyntaxHighlighter","prism","HeaderComponent","jsxDEV","_jsxDEV","Title","h2","_c","Divider","hr","_c2","Wrapper","div","_c3","Tags","span","_c4","Categories","_c5","CategoryContainer","_c6","CodeBlock","node","inline","className","children","props","match","exec","style","language","PreTag","String","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c7","Image","flex","maxWidth","height","justifyItems","_c8","ContentPage","_s","postId","console","log","post","setPost","posts","setPosts","navigate","loading","setLoading","error","setError","selectedTags","setSelectedTags","selectedCategory","setSelectedCategory","searchParams","setSearchParams","searchQuery","setSearchQuery","fetch","then","response","json","data","catch","handleTagClick","tag","event","stopPropagation","handleCategoryChange","category","isDeselecting","newCategory","uniqueCategories","Set","map","categories","length","currentIndex","findIndex","p","_id","prevPost","nextPost","goToPost","index","onClick","inded","title","margin","display","alignItems","fontSize","fontWeight","color","author","src","profileImagePath","alt","width","borderRadius","Date","createdAt","toLocaleDateString","tags","tagIndex","marginRight","cursor","gap","outline","remarkPlugins","components","code","img","content","Box","_c9","border","padding","marginTop","_c10","$RefreshReg$"],"sources":["C:/Users/rjalr/OneDrive/바탕 화면/ybigta/ybigta_blog_2/Ybigta-Blog/frontend/src/components/page/ContentPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\r\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nimport HeaderComponent from \"../ui/HeaderComponent\";\r\n\r\nconst Title = styled.h2`\r\n  font-size: 40px; // 크기는 이미지에 맞춰 조정하세요.\r\n  margin-bottom: 0; // 제목과 날짜 사이의 간격을 줄입니다.\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  border: none;\r\n  height: 1px;\r\n  background-color: #ced4da;\r\n  margin-top: 40px; // 구분선 위의 간격을 조정하세요.\r\n  margin-bottom: 40px; // 구분선 아래의 간격을 조정하세요.\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 40px;\r\n`;\r\n\r\nconst Tags = styled.span`\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  background-color: #ebebeb;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  justify-content: center;\r\n  color: #666666;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Categories = styled.span`\r\n  margin: \"0 25px\",\r\n  fontWeight: \"bold\",\r\n  color: \"blue\"\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  //width: 600px;\r\n  gap: 7px;\r\n`;\r\n\r\nconst CodeBlock = ({ node, inline, className, children, ...props }) => {\r\n  const match = /language-(\\w+)/.exec(className || \"\");\r\n  return !inline && match ? (\r\n    <SyntaxHighlighter\r\n      style={prism}\r\n      language={match[1]}\r\n      PreTag=\"div\"\r\n      {...props}\r\n    >\r\n      {String(children).replace(/\\n$/, \"\")}\r\n    </SyntaxHighlighter>\r\n  ) : (\r\n    <code className={className} {...props}>\r\n      {children}\r\n    </code>\r\n  );\r\n};\r\n\r\nconst Image = ({ node, ...props }) => (\r\n  <img\r\n    {...props}\r\n    style={{\r\n      flex: \"column\",\r\n      maxWidth: \"auto\",\r\n      height: \"450px\",\r\n      justifyItems: \"center\",\r\n    }} // 이 부분을 조정하여 이미지 크기 스타일을 적용\r\n  />\r\n);\r\n\r\nconst ContentPage = () => {\r\n  const { postId } = useParams(); // URL에서 postId를 추출\r\n  console.log(postId);\r\n  const [post, setPost] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\r\n      .then((response) => response.json())\r\n      .then((data) => setPost(data))\r\n      .catch((error) => console.log(error));\r\n\r\n    fetch(`http://localhost:8000/posts`) // 모든 posts를 가져옵니다.\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data))\r\n      .catch((error) => console.log(error));\r\n  }, [postId]);\r\n\r\n  // 태그 단일선택 처리 (공통사용)\r\n  const handleTagClick = (tag, event) => {\r\n    event.stopPropagation();\r\n    navigate(`/?tags=${tag}`);\r\n  };\r\n\r\n  // 카테고리 선택 처리\r\n  const handleCategoryChange = (category) => {\r\n    const isDeselecting = selectedCategory === category || category === \"ALL\";\r\n    const newCategory = isDeselecting ? \"\" : category;\r\n    setSelectedCategory(newCategory);\r\n    navigate(\"/\" + (newCategory ? `?cat=${newCategory}` : \"\"));\r\n  };\r\n\r\n  const uniqueCategories = [...new Set(posts.map((post) => post.categories))];\r\n\r\n  if (!post || !posts.length) return <div>Loading...</div>;\r\n\r\n  // 현재 포스트의 인덱스를 찾음\r\n  const currentIndex = posts.findIndex((p) => p._id === postId);\r\n\r\n  // 이전 포스트와 다음 포스트를 결정\r\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\r\n  const nextPost =\r\n    currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\r\n\r\n  const goToPost = (postId) => {\r\n    navigate(`/posts/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <HeaderComponent></HeaderComponent>\r\n      {/* 카테고리 버튼 렌더링 */}\r\n      <CategoryContainer>\r\n        {uniqueCategories.map((category, index) => (\r\n          <Categories\r\n            key={inded}\r\n            onClick={() => handleCategoryChange(category)}\r\n          >\r\n            {category}\r\n          </Categories>\r\n        ))}\r\n      </CategoryContainer>\r\n\r\n      <div>\r\n        <Title>{post.title}</Title>\r\n\r\n        {/* 작성자, 프사, 날짜, 아웃라인 */}\r\n        <div\r\n          style={{\r\n            margin: \"5px 0 5px 0\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"bold\",\r\n            color: \"gray\",\r\n          }}\r\n        >\r\n          <span>{post.author}</span>\r\n          <img\r\n            src={post.profileImagePath}\r\n            alt=\"Author's profile\"\r\n            style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n          />\r\n          <span\r\n            style={{\r\n              margin: \"0 25px\",\r\n              fontWeight: \"bold\",\r\n              color: \"lightgray\",\r\n            }}\r\n          >\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </span>\r\n        </div>\r\n\r\n        {/* 태그 및 단일 필터링 */}\r\n        {post.tags.map((tag, tagIndex) => (\r\n          <Tags\r\n            key={tagIndex}\r\n            onClick={(event) => handleTagClick(tag, event)}\r\n            style={{ marginRight: \"15px\", cursor: \"pointer\", gap: \"10px\" }}\r\n          >\r\n            #{tag}\r\n          </Tags>\r\n        ))}\r\n\r\n        <Divider />\r\n        <h4>{post.outline}</h4>\r\n\r\n        <ReactMarkdown\r\n          remarkPlugins={[remarkGfm]}\r\n          components={{ code: CodeBlock, img: Image }}\r\n        >\r\n          {post.content}\r\n        </ReactMarkdown>\r\n      </div>\r\n      {/* button to get back to BlogListPage */}\r\n      <Box onClick={() => navigate(\"/\")}>목록으로</Box>\r\n\r\n      {prevPost && (\r\n        <Box onClick={() => goToPost(prevPost._id)}>\r\n          이전글: {prevPost.title}\r\n        </Box>\r\n      )}\r\n      {nextPost && (\r\n        <Box onClick={() => goToPost(nextPost._id)}>\r\n          다음글: {nextPost.title}\r\n        </Box>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Box = ({ children, onClick }) => (\r\n  <button\r\n    style={{\r\n      border: \"1px solid black\",\r\n      padding: \"20px\",\r\n      marginTop: \"20px\",\r\n      cursor: \"pointer\",\r\n    }}\r\n    onClick={onClick}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default ContentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC1E,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE;AACA,SAASC,KAAK,QAAQ,gDAAgD;AAEtE,OAAOC,eAAe,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,KAAK,GAAGT,MAAM,CAACU,EAAG;AACxB;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,KAAK;AAKX,MAAMG,OAAO,GAAGZ,MAAM,CAACa,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,OAAO;AAQb,MAAMG,OAAO,GAAGf,MAAM,CAACgB,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,OAAO;AAMb,MAAMG,IAAI,GAAGlB,MAAM,CAACmB,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,IAAI;AAaV,MAAMG,UAAU,GAAGrB,MAAM,CAACmB,IAAK;AAC/B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,UAAU;AAMhB,MAAME,iBAAiB,GAAGvB,MAAM,CAACgB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GARID,iBAAiB;AAUvB,MAAME,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,KAAK;EACrE,MAAMC,KAAK,GAAG,gBAAgB,CAACC,IAAI,CAACJ,SAAS,IAAI,EAAE,CAAC;EACpD,OAAO,CAACD,MAAM,IAAII,KAAK,gBACrBvB,OAAA,CAACJ,iBAAiB;IAChB6B,KAAK,EAAE5B,KAAM;IACb6B,QAAQ,EAAEH,KAAK,CAAC,CAAC,CAAE;IACnBI,MAAM,EAAC,KAAK;IAAA,GACRL,KAAK;IAAAD,QAAA,EAERO,MAAM,CAACP,QAAQ,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,EAAE;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC,gBAEpBjC,OAAA;IAAMoB,SAAS,EAAEA,SAAU;IAAA,GAAKE,KAAK;IAAAD,QAAA,EAClCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACP;AACH,CAAC;AAACC,GAAA,GAhBIjB,SAAS;AAkBf,MAAMkB,KAAK,GAAGA,CAAC;EAAEjB,IAAI;EAAE,GAAGI;AAAM,CAAC,kBAC/BtB,OAAA;EAAA,GACMsB,KAAK;EACTG,KAAK,EAAE;IACLW,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,OAAO;IACfC,YAAY,EAAE;EAChB,CAAE,CAAC;AAAA;EAAAT,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACF;AAACO,GAAA,GAVIL,KAAK;AAYX,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGtD,SAAS,CAAC,CAAC,CAAC,CAAC;EAChCuD,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC4D,KAAK,EAAEC,QAAQ,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM8D,QAAQ,GAAG5D,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC6D,OAAO,EAAEC,UAAU,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiE,KAAK,EAAEC,QAAQ,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmE,YAAY,EAAEC,eAAe,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuE,YAAY,EAAEC,eAAe,CAAC,GAAGrE,eAAe,CAAC,CAAC;EACzD,MAAM,CAACsE,WAAW,EAAEC,cAAc,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd4E,KAAK,CAAE,+BAA8BpB,MAAO,EAAC,CAAC,CAAC;IAAA,CAC5CqB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKpB,OAAO,CAACoB,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEf,KAAK,IAAKT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAEvCU,KAAK,CAAE,6BAA4B,CAAC,CAAC;IAAA,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKlB,QAAQ,CAACkB,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEf,KAAK,IAAKT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM0B,cAAc,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACrCA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvBtB,QAAQ,CAAE,UAASoB,GAAI,EAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,MAAMC,aAAa,GAAGlB,gBAAgB,KAAKiB,QAAQ,IAAIA,QAAQ,KAAK,KAAK;IACzE,MAAME,WAAW,GAAGD,aAAa,GAAG,EAAE,GAAGD,QAAQ;IACjDhB,mBAAmB,CAACkB,WAAW,CAAC;IAChC1B,QAAQ,CAAC,GAAG,IAAI0B,WAAW,GAAI,QAAOA,WAAY,EAAC,GAAG,EAAE,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,gBAAgB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC9B,KAAK,CAAC+B,GAAG,CAAEjC,IAAI,IAAKA,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC;EAE3E,IAAI,CAAClC,IAAI,IAAI,CAACE,KAAK,CAACiC,MAAM,EAAE,oBAAOjF,OAAA;IAAAqB,QAAA,EAAK;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAExD;EACA,MAAMiD,YAAY,GAAGlC,KAAK,CAACmC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK1C,MAAM,CAAC;;EAE7D;EACA,MAAM2C,QAAQ,GAAGJ,YAAY,GAAG,CAAC,GAAGlC,KAAK,CAACkC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI;EAClE,MAAMK,QAAQ,GACZL,YAAY,GAAGlC,KAAK,CAACiC,MAAM,GAAG,CAAC,GAAGjC,KAAK,CAACkC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI;EAElE,MAAMM,QAAQ,GAAI7C,MAAM,IAAK;IAC3BO,QAAQ,CAAE,UAASP,MAAO,EAAC,CAAC;EAC9B,CAAC;EAED,oBACE3C,OAAA,CAACO,OAAO;IAAAc,QAAA,gBACNrB,OAAA,CAACF,eAAe;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,eAEnCjC,OAAA,CAACe,iBAAiB;MAAAM,QAAA,EACfwD,gBAAgB,CAACE,GAAG,CAAC,CAACL,QAAQ,EAAEe,KAAK,kBACpCzF,OAAA,CAACa,UAAU;QAET6E,OAAO,EAAEA,CAAA,KAAMjB,oBAAoB,CAACC,QAAQ,CAAE;QAAArD,QAAA,EAE7CqD;MAAQ,GAHJiB,KAAK;QAAA7D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIA,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,eAEpBjC,OAAA;MAAAqB,QAAA,gBACErB,OAAA,CAACC,KAAK;QAAAoB,QAAA,EAAEyB,IAAI,CAAC8C;MAAK;QAAA9D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAG3BjC,OAAA;QACEyB,KAAK,EAAE;UACLoE,MAAM,EAAE,aAAa;UACrBC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,MAAM;UAClBC,KAAK,EAAE;QACT,CAAE;QAAA7E,QAAA,gBAEFrB,OAAA;UAAAqB,QAAA,EAAOyB,IAAI,CAACqD;QAAM;UAAArE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BjC,OAAA;UACEoG,GAAG,EAAEtD,IAAI,CAACuD,gBAAiB;UAC3BC,GAAG,EAAC,kBAAkB;UACtB7E,KAAK,EAAE;YAAE8E,KAAK,EAAE,MAAM;YAAEjE,MAAM,EAAE,MAAM;YAAEkE,YAAY,EAAE;UAAM;QAAE;UAAA1E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACFjC,OAAA;UACEyB,KAAK,EAAE;YACLoE,MAAM,EAAE,QAAQ;YAChBI,UAAU,EAAE,MAAM;YAClBC,KAAK,EAAE;UACT,CAAE;UAAA7E,QAAA,EAED,IAAIoF,IAAI,CAAC3D,IAAI,CAAC4D,SAAS,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAA7E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAGLa,IAAI,CAAC8D,IAAI,CAAC7B,GAAG,CAAC,CAACT,GAAG,EAAEuC,QAAQ,kBAC3B7G,OAAA,CAACU,IAAI;QAEHgF,OAAO,EAAGnB,KAAK,IAAKF,cAAc,CAACC,GAAG,EAAEC,KAAK,CAAE;QAC/C9C,KAAK,EAAE;UAAEqF,WAAW,EAAE,MAAM;UAAEC,MAAM,EAAE,SAAS;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAA3F,QAAA,GAChE,GACE,EAACiD,GAAG;MAAA,GAJAuC,QAAQ;QAAA/E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACP,CAAC,eAEFjC,OAAA,CAACI,OAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXjC,OAAA;QAAAqB,QAAA,EAAKyB,IAAI,CAACmE;MAAO;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEvBjC,OAAA,CAACP,aAAa;QACZyH,aAAa,EAAE,CAACxH,SAAS,CAAE;QAC3ByH,UAAU,EAAE;UAAEC,IAAI,EAAEnG,SAAS;UAAEoG,GAAG,EAAElF;QAAM,CAAE;QAAAd,QAAA,EAE3CyB,IAAI,CAACwE;MAAO;QAAAxF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAENjC,OAAA,CAACuH,GAAG;MAAC7B,OAAO,EAAEA,CAAA,KAAMxC,QAAQ,CAAC,GAAG,CAAE;MAAA7B,QAAA,EAAC;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAE5CqD,QAAQ,iBACPtF,OAAA,CAACuH,GAAG;MAAC7B,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAACF,QAAQ,CAACD,GAAG,CAAE;MAAAhE,QAAA,GAAC,sBACrC,EAACiE,QAAQ,CAACM,KAAK;IAAA;MAAA9D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN,EACAsD,QAAQ,iBACPvF,OAAA,CAACuH,GAAG;MAAC7B,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAACD,QAAQ,CAACF,GAAG,CAAE;MAAAhE,QAAA,GAAC,sBACrC,EAACkE,QAAQ,CAACK,KAAK;IAAA;MAAA9D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACS,EAAA,CAzIID,WAAW;EAAA,QACIpD,SAAS,EAIXC,WAAW,EAKYC,eAAe;AAAA;AAAAiI,GAAA,GAVnD/E,WAAW;AA2IjB,MAAM8E,GAAG,GAAGA,CAAC;EAAElG,QAAQ;EAAEqE;AAAQ,CAAC,kBAChC1F,OAAA;EACEyB,KAAK,EAAE;IACLgG,MAAM,EAAE,iBAAiB;IACzBC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE,MAAM;IACjBZ,MAAM,EAAE;EACV,CAAE;EACFrB,OAAO,EAAEA,OAAQ;EAAArE,QAAA,EAEhBA;AAAQ;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACT;AAAC2F,IAAA,GAZIL,GAAG;AAcT,eAAe9E,WAAW;AAAC,IAAAtC,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAkB,GAAA,EAAAM,GAAA,EAAAgF,GAAA,EAAAI,IAAA;AAAAC,YAAA,CAAA1H,EAAA;AAAA0H,YAAA,CAAAvH,GAAA;AAAAuH,YAAA,CAAApH,GAAA;AAAAoH,YAAA,CAAAjH,GAAA;AAAAiH,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAA7G,GAAA;AAAA6G,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}