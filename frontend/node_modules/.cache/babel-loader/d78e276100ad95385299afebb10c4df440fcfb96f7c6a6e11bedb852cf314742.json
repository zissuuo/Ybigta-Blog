{"ast":null,"code":"/**\r\n * @typedef {import('../types.js').Options} Options\r\n * @typedef {import('../types.js').State} State\r\n */\n\n/**\r\n * @param {State} state\r\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\r\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one';\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error('Cannot serialize items with `' + style + '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`');\n  }\n  return style;\n}","map":{"version":3,"names":["checkListItemIndent","state","style","options","listItemIndent","Error"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js"],"sourcesContent":["/**\r\n * @typedef {import('../types.js').Options} Options\r\n * @typedef {import('../types.js').State} State\r\n */\r\n\r\n/**\r\n * @param {State} state\r\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\r\n */\r\nexport function checkListItemIndent(state) {\r\n  const style = state.options.listItemIndent || 'one'\r\n\r\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\r\n    throw new Error(\r\n      'Cannot serialize items with `' +\r\n        style +\r\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\r\n    )\r\n  }\r\n\r\n  return style\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAmBA,CAACC,KAAK,EAAE;EACzC,MAAMC,KAAK,GAAGD,KAAK,CAACE,OAAO,CAACC,cAAc,IAAI,KAAK;EAEnD,IAAIF,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,OAAO,EAAE;IAC3D,MAAM,IAAIG,KAAK,CACb,+BAA+B,GAC7BH,KAAK,GACL,mEACJ,CAAC;EACH;EAEA,OAAOA,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}