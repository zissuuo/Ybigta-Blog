{"ast":null,"code":"/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Table} Table\r\n * @typedef {import('../state.js').State} State\r\n */\n\nimport { pointEnd, pointStart } from 'unist-util-position';\n\n/**\r\n * Turn an mdast `table` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Table} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\nexport function table(state, node) {\n  const rows = state.all(node);\n  const firstRow = rows.shift();\n  /** @type {Array<Element>} */\n  const tableContent = [];\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    };\n    state.patch(node.children[0], head);\n    tableContent.push(head);\n  }\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    };\n    const start = pointStart(node.children[1]);\n    const end = pointEnd(node.children[node.children.length - 1]);\n    if (start && end) body.position = {\n      start,\n      end\n    };\n    tableContent.push(body);\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}","map":{"version":3,"names":["pointEnd","pointStart","table","state","node","rows","all","firstRow","shift","tableContent","head","type","tagName","properties","children","wrap","patch","push","length","body","start","end","position","result","applyData"],"sources":["C:/Users/rjalr/OneDrive/바탕 화면/ybigta/ybigta_blog_2/Ybigta-Blog/frontend/node_modules/mdast-util-to-hast/lib/handlers/table.js"],"sourcesContent":["/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').Table} Table\r\n * @typedef {import('../state.js').State} State\r\n */\r\n\r\nimport {pointEnd, pointStart} from 'unist-util-position'\r\n\r\n/**\r\n * Turn an mdast `table` node into hast.\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Table} node\r\n *   mdast node.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nexport function table(state, node) {\r\n  const rows = state.all(node)\r\n  const firstRow = rows.shift()\r\n  /** @type {Array<Element>} */\r\n  const tableContent = []\r\n\r\n  if (firstRow) {\r\n    /** @type {Element} */\r\n    const head = {\r\n      type: 'element',\r\n      tagName: 'thead',\r\n      properties: {},\r\n      children: state.wrap([firstRow], true)\r\n    }\r\n    state.patch(node.children[0], head)\r\n    tableContent.push(head)\r\n  }\r\n\r\n  if (rows.length > 0) {\r\n    /** @type {Element} */\r\n    const body = {\r\n      type: 'element',\r\n      tagName: 'tbody',\r\n      properties: {},\r\n      children: state.wrap(rows, true)\r\n    }\r\n\r\n    const start = pointStart(node.children[1])\r\n    const end = pointEnd(node.children[node.children.length - 1])\r\n    if (start && end) body.position = {start, end}\r\n    tableContent.push(body)\r\n  }\r\n\r\n  /** @type {Element} */\r\n  const result = {\r\n    type: 'element',\r\n    tagName: 'table',\r\n    properties: {},\r\n    children: state.wrap(tableContent, true)\r\n  }\r\n  state.patch(node, result)\r\n  return state.applyData(node, result)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,QAAQ,EAAEC,UAAU,QAAO,qBAAqB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACjC,MAAMC,IAAI,GAAGF,KAAK,CAACG,GAAG,CAACF,IAAI,CAAC;EAC5B,MAAMG,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;EAC7B;EACA,MAAMC,YAAY,GAAG,EAAE;EAEvB,IAAIF,QAAQ,EAAE;IACZ;IACA,MAAMG,IAAI,GAAG;MACXC,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE,OAAO;MAChBC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAEX,KAAK,CAACY,IAAI,CAAC,CAACR,QAAQ,CAAC,EAAE,IAAI;IACvC,CAAC;IACDJ,KAAK,CAACa,KAAK,CAACZ,IAAI,CAACU,QAAQ,CAAC,CAAC,CAAC,EAAEJ,IAAI,CAAC;IACnCD,YAAY,CAACQ,IAAI,CAACP,IAAI,CAAC;EACzB;EAEA,IAAIL,IAAI,CAACa,MAAM,GAAG,CAAC,EAAE;IACnB;IACA,MAAMC,IAAI,GAAG;MACXR,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE,OAAO;MAChBC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAEX,KAAK,CAACY,IAAI,CAACV,IAAI,EAAE,IAAI;IACjC,CAAC;IAED,MAAMe,KAAK,GAAGnB,UAAU,CAACG,IAAI,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAMO,GAAG,GAAGrB,QAAQ,CAACI,IAAI,CAACU,QAAQ,CAACV,IAAI,CAACU,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7D,IAAIE,KAAK,IAAIC,GAAG,EAAEF,IAAI,CAACG,QAAQ,GAAG;MAACF,KAAK;MAAEC;IAAG,CAAC;IAC9CZ,YAAY,CAACQ,IAAI,CAACE,IAAI,CAAC;EACzB;;EAEA;EACA,MAAMI,MAAM,GAAG;IACbZ,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE,OAAO;IAChBC,UAAU,EAAE,CAAC,CAAC;IACdC,QAAQ,EAAEX,KAAK,CAACY,IAAI,CAACN,YAAY,EAAE,IAAI;EACzC,CAAC;EACDN,KAAK,CAACa,KAAK,CAACZ,IAAI,EAAEmB,MAAM,CAAC;EACzB,OAAOpB,KAAK,CAACqB,SAAS,CAACpB,IAAI,EAAEmB,MAAM,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}