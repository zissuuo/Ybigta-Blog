{"ast":null,"code":"var _jsxFileName = \"/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n_c = Wrapper;\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\nconst CodeBlock = ({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) => {\n  const match = /language-(\\w+)/.exec(className || \"\");\n  return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    style: prism,\n    language: match[1],\n    PreTag: \"div\",\n    ...props,\n    children: String(children).replace(/\\n$/, \"\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n    className: className,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CodeBlock;\nconst Image = ({\n  node,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  ...props,\n  style: {\n    flex: \"column\",\n    maxWidth: \"auto\",\n    height: \"450px\",\n    justifyItems: \"center\"\n  } // 이 부분을 조정하여 이미지 크기 스타일을 적용\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this);\n_c3 = Image;\nconst ContentPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams(); // URL에서 postId를 추출\n  console.log(postId);\n  const [post, setPost] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\n    .then(response => response.json()).then(data => setPost(data)).catch(error => console.log(error));\n    fetch(`http://localhost:8000/posts`) // 모든 posts를 가져옵니다.\n    .then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, [postId]);\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n  if (!post || !posts.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 38\n  }, this);\n\n  // 현재 포스트의 인덱스를 찾음\n  const currentIndex = posts.findIndex(p => p._id === postId);\n\n  // 이전 포스트와 다음 포스트를 결정\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\n  const nextPost = currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\n  const goToPost = postId => {\n    navigate(`/posts/${postId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), post.tags && post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"#\", tag]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }, this)), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        remarkPlugins: [remarkGfm],\n        components: {\n          code: CodeBlock,\n          img: Image\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), \"// \\uC774\\uC804\\uAE00, \\uB2E4\\uC74C\\uAE00 \\uBC84\\uD2BC\", prevPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(prevPost._id),\n      children: [\"\\uC774\\uC804\\uAE00: \", prevPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), nextPost && /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => goToPost(nextPost._id),\n      children: [\"\\uB2E4\\uC74C\\uAE00: \", nextPost.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"oO7cIpNP/+rb9az8jth79rbQZXA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c4 = ContentPage;\nconst Box = ({\n  children,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  style: {\n    border: \"1px solid black\",\n    padding: \"20px\",\n    marginTop: \"20px\",\n    cursor: \"pointer\"\n  },\n  onClick: onClick,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 126,\n  columnNumber: 3\n}, this);\n_c5 = Box;\nexport default ContentPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CodeBlock\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"ContentPage\");\n$RefreshReg$(_c5, \"Box\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styled","ReactMarkdown","remarkGfm","Prism","SyntaxHighlighter","prism","jsxDEV","_jsxDEV","Wrapper","div","_c","Tags","span","CodeBlock","node","inline","className","children","props","match","exec","style","language","PreTag","String","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Image","flex","maxWidth","height","justifyItems","_c3","ContentPage","_s","postId","console","log","post","setPost","posts","setPosts","navigate","fetch","then","response","json","data","catch","error","handleTagClick","tag","event","stopPropagation","length","currentIndex","findIndex","p","_id","prevPost","nextPost","goToPost","title","tags","map","index","remarkPlugins","components","code","img","content","Box","onClick","_c4","border","padding","marginTop","cursor","_c5","$RefreshReg$"],"sources":["/Users/yejin/Documents/Yonsei/Ybigta/frontPJ_blog/frontend/src/components/page/ContentPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// 원하는 스타일 테마를 선택하세요. 예: vs, xcode, prism, atomDark 등\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px;\n`;\n\nconst Tags = styled.span`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-right: 8px;\n  padding-left: 8px;\n  background-color: #ebebeb;\n  text-align: center;\n  font-size: 13px;\n  justify-content: center;\n  color: #666666;\n  border-radius: 5px;\n`;\n\nconst CodeBlock = ({ node, inline, className, children, ...props }) => {\n  const match = /language-(\\w+)/.exec(className || \"\");\n  return !inline && match ? (\n    <SyntaxHighlighter\n      style={prism}\n      language={match[1]}\n      PreTag=\"div\"\n      {...props}\n    >\n      {String(children).replace(/\\n$/, \"\")}\n    </SyntaxHighlighter>\n  ) : (\n    <code className={className} {...props}>\n      {children}\n    </code>\n  );\n};\n\nconst Image = ({ node, ...props }) => (\n  <img\n    {...props}\n    style={{\n      flex: \"column\",\n      maxWidth: \"auto\",\n      height: \"450px\",\n      justifyItems: \"center\",\n    }} // 이 부분을 조정하여 이미지 크기 스타일을 적용\n  />\n);\n\nconst ContentPage = () => {\n  const { postId } = useParams(); // URL에서 postId를 추출\n  console.log(postId);\n  const [post, setPost] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/${postId}`) // postId를 사용하여 해당 글 정보를 불러옵니다.\n      .then((response) => response.json())\n      .then((data) => setPost(data))\n      .catch((error) => console.log(error));\n\n    fetch(`http://localhost:8000/posts`) // 모든 posts를 가져옵니다.\n      .then((response) => response.json())\n      .then((data) => setPosts(data))\n      .catch((error) => console.log(error));\n  }, [postId]);\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  if (!post || !posts.length) return <div>Loading...</div>;\n\n  // 현재 포스트의 인덱스를 찾음\n  const currentIndex = posts.findIndex((p) => p._id === postId);\n\n  // 이전 포스트와 다음 포스트를 결정\n  const prevPost = currentIndex > 0 ? posts[currentIndex - 1] : null;\n  const nextPost =\n    currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;\n\n  const goToPost = (postId) => {\n    navigate(`/posts/${postId}`);\n  };\n\n  return (\n    <Wrapper>\n      <div>\n        <h2>{post.title}</h2>\n        {post.tags && post.tags.map((tag, index) => <p key={index}>#{tag}</p>)}\n        <ReactMarkdown\n          remarkPlugins={[remarkGfm]}\n          components={{ code: CodeBlock, img: Image }}\n        >\n          {post.content}\n        </ReactMarkdown>\n      </div>\n      // 이전글, 다음글 버튼\n      {prevPost && (\n        <Box onClick={() => goToPost(prevPost._id)}>\n          이전글: {prevPost.title}\n        </Box>\n      )}\n      {nextPost && (\n        <Box onClick={() => goToPost(nextPost._id)}>\n          다음글: {nextPost.title}\n        </Box>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Box = ({ children, onClick }) => (\n  <button\n    style={{\n      border: \"1px solid black\",\n      padding: \"20px\",\n      marginTop: \"20px\",\n      cursor: \"pointer\",\n    }}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default ContentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}