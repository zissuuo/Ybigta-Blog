{"ast":null,"code":"/*\r\nLanguage: Mizar\r\nDescription: The Mizar Language is a formal language derived from the mathematical vernacular.\r\nAuthor: Kelley van Evert <kelleyvanevert@gmail.com>\r\nWebsite: http://mizar.org/language/\r\nCategory: scientific\r\n*/\n\nfunction mizar(hljs) {\n  return {\n    name: 'Mizar',\n    keywords: 'environ vocabularies notations constructors definitions ' + 'registrations theorems schemes requirements begin end definition ' + 'registration cluster existence pred func defpred deffunc theorem ' + 'proof let take assume then thus hence ex for st holds consider ' + 'reconsider such that and in provided of as from be being by means ' + 'equals implies iff redefine define now not or attr is mode ' + 'suppose per cases set thesis contradiction scheme reserve struct ' + 'correctness compatibility coherence symmetry assymetry ' + 'reflexivity irreflexivity connectedness uniqueness commutativity ' + 'idempotence involutiveness projectivity',\n    contains: [hljs.COMMENT('::', '$')]\n  };\n}\nmodule.exports = mizar;","map":{"version":3,"names":["mizar","hljs","name","keywords","contains","COMMENT","module","exports"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/node_modules/highlight.js/lib/languages/mizar.js"],"sourcesContent":["/*\r\nLanguage: Mizar\r\nDescription: The Mizar Language is a formal language derived from the mathematical vernacular.\r\nAuthor: Kelley van Evert <kelleyvanevert@gmail.com>\r\nWebsite: http://mizar.org/language/\r\nCategory: scientific\r\n*/\r\n\r\nfunction mizar(hljs) {\r\n  return {\r\n    name: 'Mizar',\r\n    keywords:\r\n      'environ vocabularies notations constructors definitions ' +\r\n      'registrations theorems schemes requirements begin end definition ' +\r\n      'registration cluster existence pred func defpred deffunc theorem ' +\r\n      'proof let take assume then thus hence ex for st holds consider ' +\r\n      'reconsider such that and in provided of as from be being by means ' +\r\n      'equals implies iff redefine define now not or attr is mode ' +\r\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\r\n      'correctness compatibility coherence symmetry assymetry ' +\r\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\r\n      'idempotence involutiveness projectivity',\r\n    contains: [\r\n      hljs.COMMENT('::', '$')\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = mizar;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAKA,CAACC,IAAI,EAAE;EACnB,OAAO;IACLC,IAAI,EAAE,OAAO;IACbC,QAAQ,EACN,0DAA0D,GAC1D,mEAAmE,GACnE,mEAAmE,GACnE,iEAAiE,GACjE,oEAAoE,GACpE,6DAA6D,GAC7D,mEAAmE,GACnE,yDAAyD,GACzD,mEAAmE,GACnE,yCAAyC;IAC3CC,QAAQ,EAAE,CACRH,IAAI,CAACI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAE3B,CAAC;AACH;AAEAC,MAAM,CAACC,OAAO,GAAGP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}