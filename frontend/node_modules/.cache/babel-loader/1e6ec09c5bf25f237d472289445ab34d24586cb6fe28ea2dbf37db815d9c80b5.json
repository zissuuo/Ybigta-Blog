{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\2024-1 YBIGTA\\\\Ybigta_BLOG\\\\Ybigta-Blog\\\\frontend\\\\src\\\\components\\\\page\\\\BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n_c = Wrapper;\nconst TagContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    //width: 600px;\n    gap: 7px;\n`;\n_c2 = TagContainer;\nconst CategoryContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    //width: 600px;\n    gap: 7px;\n`;\n_c3 = CategoryContainer;\nconst Tags = styled.span`\n    padding-top: 3px;\n    padding-bottom: 3px;\n    padding-right: 8px;\n    padding-left: 8px;\n    background-color: #EBEBEB;\n    text-align: center;\n    font-size: 13px;\n    justify-content: center;\n    color: #666666;\n    border-radius: 5px;\n`;\n_c4 = Tags;\nconst BlogListPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 필터링 초기화\n  const resetFilters = () => {\n    setSelectedTags([]);\n    setSelectedCategory('');\n    setSearchParams({});\n  };\n\n  // 날짜 정렬\n  const sortPostsByDate = posts => {\n    return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // 초기 포스트 페이지 로딩\n  useEffect(() => {\n    fetch(`http://localhost:8000/posts/?${setSearchParams}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      return response.json();\n    }).then(data => {\n      const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\n      setPosts(sortedPosts);\n      // setPosts(data);\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\n  const handlePostClick = postId => {\n    navigate(`/posts/${postId}`);\n  };\n\n  // 태그 단일선택 처리 (공통사용)\n  const handleTagClick = (tag, event) => {\n    event.stopPropagation();\n    navigate(`/?tags=${tag}`);\n  };\n\n  // 태그 다중선택 처리\n  const handleTagChange = tag => {\n    const newSelectedTags = selectedTags.includes(tag) ? selectedTags.filter(t => t !== tag) : [...selectedTags, tag];\n    setSelectedTags(newSelectedTags);\n    setSearchParams({\n      tags: newSelectedTags.join('&'),\n      cat: selectedCategory\n    });\n  };\n\n  // 카테고리 선택 처리\n  const handleCategoryChange = category => {\n    const isDeselecting = selectedCategory === category || category === 'ALL';\n    const newCategory = isDeselecting ? '' : category;\n    setSelectedCategory(newCategory);\n    if (newCategory === '') {\n      setSearchParams(selectedTags.length > 0 ? {\n        tags: selectedTags.join('&')\n      } : {});\n    } else {\n      setSearchParams({\n        tags: selectedTags.join('&'),\n        cat: newCategory\n      });\n    }\n  };\n\n  // // posts Data 필터링\n  // const filteredPosts = posts.filter(post => {\n  //     const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\n  //     const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\n  //     return hasSelectedTags && hasSelectedCategory;\n  // });\n\n  // const allTags = posts.reduce((acc, post) => [...acc, ...post.tags], []);\n  // const uniqueTags = [...new Set(allTags)];\n\n  const uniqueTags = [...new Set(posts.flatMap(post => post.tags))];\n  const uniqueCategories = [...new Set(posts.map(post => post.categories))];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetFilters,\n      style: {\n        cursor: 'pointer'\n      },\n      children: \"\\uBE14\\uB85C\\uADF8 \\uBA54\\uC778/\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n      children: uniqueTags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: () => handleTagChange(tag),\n        style: {\n          marginRight: \"10px\",\n          cursor: 'pointer',\n          gap: \"10px\"\n        },\n        children: [\"#\", tag, selectedTags.includes(tag) ? ' (Selected)' : '']\n      }, tagIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: uniqueCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Tags, {\n        onClick: () => handleCategoryChange(category),\n        style: {\n          marginRight: \"10px\",\n          cursor: 'pointer',\n          gap: \"10px\"\n        },\n        children: selectedCategory === category ? `${category} (Selected)` : category\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handlePostClick(post._id),\n          style: {\n            cursor: 'pointer'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            color: 'gray'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profileImagePath,\n            alt: \"Author's profile\",\n            style: {\n              width: '30px',\n              height: '30px',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: '0 10px',\n              fontWeight: 'bold',\n              color: 'lightgray'\n            },\n            children: new Date(post.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.outline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(Tags, {\n          onClick: event => handleTagClick(tag, event),\n          style: {\n            marginRight: \"10px\",\n            cursor: 'pointer',\n            gap: \"10px\"\n          },\n          children: [\"#\", tag]\n        }, tagIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogListPage, \"khU1rbp9KH0B2+MY1Lwiyxy2HqI=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c5 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"TagContainer\");\n$RefreshReg$(_c3, \"CategoryContainer\");\n$RefreshReg$(_c4, \"Tags\");\n$RefreshReg$(_c5, \"BlogListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","styled","createGlobalStyle","jsxDEV","_jsxDEV","Wrapper","div","_c","TagContainer","_c2","CategoryContainer","_c3","Tags","span","_c4","BlogListPage","_s","loading","setLoading","error","setError","posts","setPosts","selectedTags","setSelectedTags","selectedCategory","setSelectedCategory","searchParams","setSearchParams","navigate","resetFilters","sortPostsByDate","sort","a","b","Date","createdAt","fetch","then","response","ok","Error","json","data","sortedPosts","catch","message","finally","handlePostClick","postId","handleTagClick","tag","event","stopPropagation","handleTagChange","newSelectedTags","includes","filter","t","tags","join","cat","handleCategoryChange","category","isDeselecting","newCategory","length","uniqueTags","Set","flatMap","post","uniqueCategories","map","categories","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","tagIndex","marginRight","gap","index","_id","title","display","alignItems","fontSize","fontWeight","color","author","src","profileImagePath","alt","width","height","borderRadius","margin","toLocaleDateString","outline","_c5","$RefreshReg$"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/Ybigta-Blog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    //width: 600px;\r\n    gap: 7px;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    //width: 600px;\r\n    gap: 7px;\r\n`;\r\n\r\nconst Tags = styled.span`\r\n    padding-top: 3px;\r\n    padding-bottom: 3px;\r\n    padding-right: 8px;\r\n    padding-left: 8px;\r\n    background-color: #EBEBEB;\r\n    text-align: center;\r\n    font-size: 13px;\r\n    justify-content: center;\r\n    color: #666666;\r\n    border-radius: 5px;\r\n`;\r\n\r\n  \r\nconst BlogListPage = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [posts, setPosts] = useState([]); \r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    // 페이지 이동\r\n    const navigate = useNavigate(); \r\n\r\n    // 필터링 초기화\r\n    const resetFilters = () => {\r\n        setSelectedTags([]);\r\n        setSelectedCategory('');\r\n        setSearchParams({});\r\n    };\r\n\r\n    // 날짜 정렬\r\n    const sortPostsByDate = (posts) => {\r\n        return posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    };\r\n\r\n    // 초기 포스트 페이지 로딩\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8000/posts/?${setSearchParams}`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n            throw new Error('Failed to fetch posts');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            const sortedPosts = sortPostsByDate(data); // 받아온 데이터를 날짜 순으로 정렬\r\n            setPosts(sortedPosts);\r\n            // setPosts(data);\r\n        })\r\n        .catch(error => {\r\n            setError(error.message);\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    // 글 제목 클릭 시 해당 글의 상세 페이지로 이동하는 함수\r\n    const handlePostClick = (postId) => {\r\n        navigate(`/posts/${postId}`); \r\n    };\r\n\r\n    // 태그 단일선택 처리 (공통사용)\r\n    const handleTagClick = (tag, event) => {\r\n        event.stopPropagation();\r\n        navigate(`/?tags=${tag}`);\r\n    };\r\n\r\n    // 태그 다중선택 처리\r\n    const handleTagChange = (tag) => {\r\n        const newSelectedTags = selectedTags.includes(tag) \r\n            ? selectedTags.filter(t => t !== tag) \r\n            : [...selectedTags, tag];\r\n        setSelectedTags(newSelectedTags);\r\n        setSearchParams({ tags: newSelectedTags.join('&'), cat: selectedCategory });\r\n    };\r\n\r\n    // 카테고리 선택 처리\r\n    const handleCategoryChange = (category) => {\r\n        const isDeselecting = selectedCategory === category || category === 'ALL';\r\n        const newCategory = isDeselecting ? '' : category; \r\n        setSelectedCategory(newCategory);\r\n    \r\n        if (newCategory === '') {\r\n            setSearchParams(selectedTags.length > 0 ? { tags: selectedTags.join('&') } : {});\r\n        } else {\r\n            setSearchParams({ tags: selectedTags.join('&'), cat: newCategory });\r\n        }\r\n    };\r\n\r\n    // // posts Data 필터링\r\n    // const filteredPosts = posts.filter(post => {\r\n    //     const hasSelectedTags = selectedTags.length === 0 || selectedTags.every(tag => post.tags.includes(tag));\r\n    //     const hasSelectedCategory = !selectedCategory || post.categories.includes(selectedCategory);\r\n    //     return hasSelectedTags && hasSelectedCategory;\r\n    // });\r\n\r\n    // const allTags = posts.reduce((acc, post) => [...acc, ...post.tags], []);\r\n    // const uniqueTags = [...new Set(allTags)];\r\n    \r\n    const uniqueTags = [...new Set(posts.flatMap(post => post.tags))];\r\n    const uniqueCategories = [...new Set(posts.map(post => post.categories))];\r\n    \r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h1 onClick={resetFilters} style={{cursor: 'pointer'}}>\r\n            블로그 메인/리스트 페이지\r\n            </h1>\r\n        \r\n            {/* 태그 렌더링 - 다중 선택 */}\r\n            <TagContainer>\r\n            {uniqueTags.map((tag, tagIndex) => (\r\n                <Tags key={tagIndex} onClick={() => handleTagChange(tag)} style={{marginRight: \"10px\", cursor: 'pointer', gap: \"10px\" }}>\r\n                #{tag}{selectedTags.includes(tag) ? ' (Selected)' : ''}\r\n                </Tags>     \r\n            ))}\r\n            </TagContainer>\r\n        \r\n            {/* 카테고리 버튼 렌더링 */}\r\n            <CategoryContainer>\r\n                {uniqueCategories.map((category, index) => (\r\n                <Tags key={index} onClick={() => handleCategoryChange(category)} style={{marginRight: \"10px\", cursor: 'pointer', gap: \"10px\" }}>\r\n                    {selectedCategory === category ? `${category} (Selected)` : category}\r\n                </Tags>\r\n                ))}\r\n            </CategoryContainer>\r\n        \r\n            {/* 포스트 목록 렌더링 및 각종 click 이동 이벤트 */}\r\n            <div>\r\n            {posts.map((post, index) => (\r\n                <div key={index}>\r\n                    {/* 제목 클릭 시 포스트로 이동 */}\r\n                    <h2 onClick={() => handlePostClick(post._id)} style={{cursor: 'pointer'}}> \r\n                    {post.title} \r\n                    </h2>\r\n\r\n                    {/* 작성자, 프사, 날짜, 아웃라인 */}\r\n                    <div style={{ display: 'flex', alignItems: 'center', fontSize: '16px', fontWeight: 'bold', color: 'gray' }}>\r\n                        <span>{post.author}</span>\r\n                        <img src={post.profileImagePath} alt=\"Author's profile\" style={{ width: '30px', height: '30px', borderRadius: '50%' }} />\r\n                        <span style={{ margin: '0 10px', fontWeight: 'bold', color: 'lightgray' }}>\r\n                            {new Date(post.createdAt).toLocaleDateString()}\r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <h4>{post.outline}</h4>\r\n\r\n                    {/* 태그 및 단일 필터링 */}\r\n                    {post.tags.map((tag, tagIndex) => (\r\n                        <Tags key={tagIndex} onClick={(event) => handleTagClick(tag, event)} style={{marginRight: \"10px\", cursor: 'pointer', gap: \"10px\" }}>\r\n                        #{tag}\r\n                        </Tags>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            </div>\r\n        \r\n        </Wrapper>\r\n        );\r\n      \r\n};\r\n\r\nexport default BlogListPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9D,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,YAAY,GAAGP,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,YAAY;AAUlB,MAAME,iBAAiB,GAAGT,MAAM,CAACK,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GARID,iBAAiB;AAUvB,MAAME,IAAI,GAAGX,MAAM,CAACY,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,IAAI;AAcV,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,eAAe,CAAC,CAAC;;EAEzD;EACA,MAAM6B,QAAQ,GAAG9B,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IACvBN,eAAe,CAAC,EAAE,CAAC;IACnBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,eAAe,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMG,eAAe,GAAIV,KAAK,IAAK;IAC/B,OAAOA,KAAK,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;EAC9E,CAAC;;EAED;EACAvC,SAAS,CAAC,MAAM;IACZwC,KAAK,CAAE,gCAA+BT,eAAgB,EAAC,CAAC,CACvDU,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACxC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACV,MAAMC,WAAW,GAAGb,eAAe,CAACY,IAAI,CAAC,CAAC,CAAC;MAC3CrB,QAAQ,CAACsB,WAAW,CAAC;MACrB;IACJ,CAAC,CAAC,CACDC,KAAK,CAAC1B,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC;IAC3B,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACX7B,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM8B,eAAe,GAAIC,MAAM,IAAK;IAChCpB,QAAQ,CAAE,UAASoB,MAAO,EAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACnCA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvBxB,QAAQ,CAAE,UAASsB,GAAI,EAAC,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMG,eAAe,GAAIH,GAAG,IAAK;IAC7B,MAAMI,eAAe,GAAGhC,YAAY,CAACiC,QAAQ,CAACL,GAAG,CAAC,GAC5C5B,YAAY,CAACkC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKP,GAAG,CAAC,GACnC,CAAC,GAAG5B,YAAY,EAAE4B,GAAG,CAAC;IAC5B3B,eAAe,CAAC+B,eAAe,CAAC;IAChC3B,eAAe,CAAC;MAAE+B,IAAI,EAAEJ,eAAe,CAACK,IAAI,CAAC,GAAG,CAAC;MAAEC,GAAG,EAAEpC;IAAiB,CAAC,CAAC;EAC/E,CAAC;;EAED;EACA,MAAMqC,oBAAoB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,aAAa,GAAGvC,gBAAgB,KAAKsC,QAAQ,IAAIA,QAAQ,KAAK,KAAK;IACzE,MAAME,WAAW,GAAGD,aAAa,GAAG,EAAE,GAAGD,QAAQ;IACjDrC,mBAAmB,CAACuC,WAAW,CAAC;IAEhC,IAAIA,WAAW,KAAK,EAAE,EAAE;MACpBrC,eAAe,CAACL,YAAY,CAAC2C,MAAM,GAAG,CAAC,GAAG;QAAEP,IAAI,EAAEpC,YAAY,CAACqC,IAAI,CAAC,GAAG;MAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM;MACHhC,eAAe,CAAC;QAAE+B,IAAI,EAAEpC,YAAY,CAACqC,IAAI,CAAC,GAAG,CAAC;QAAEC,GAAG,EAAEI;MAAY,CAAC,CAAC;IACvE;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAME,UAAU,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC/C,KAAK,CAACgD,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACX,IAAI,CAAC,CAAC,CAAC;EACjE,MAAMY,gBAAgB,GAAG,CAAC,GAAG,IAAIH,GAAG,CAAC/C,KAAK,CAACmD,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC;EAEzE,IAAIxD,OAAO,EAAE,oBAAOb,OAAA;IAAAsE,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAI3D,KAAK,EAAE,oBAAOf,OAAA;IAAAsE,QAAA,GAAK,SAAO,EAACvD,KAAK;EAAA;IAAAwD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACI1E,OAAA,CAACC,OAAO;IAAAqE,QAAA,gBACJtE,OAAA;MAAI2E,OAAO,EAAEjD,YAAa;MAACkD,KAAK,EAAE;QAACC,MAAM,EAAE;MAAS,CAAE;MAAAP,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGL1E,OAAA,CAACI,YAAY;MAAAkE,QAAA,EACZP,UAAU,CAACK,GAAG,CAAC,CAACrB,GAAG,EAAE+B,QAAQ,kBAC1B9E,OAAA,CAACQ,IAAI;QAAgBmE,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAACH,GAAG,CAAE;QAAC6B,KAAK,EAAE;UAACG,WAAW,EAAE,MAAM;UAAEF,MAAM,EAAE,SAAS;UAAEG,GAAG,EAAE;QAAO,CAAE;QAAAV,QAAA,GAAC,GACxH,EAACvB,GAAG,EAAE5B,YAAY,CAACiC,QAAQ,CAACL,GAAG,CAAC,GAAG,aAAa,GAAG,EAAE;MAAA,GAD3C+B,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eAGf1E,OAAA,CAACM,iBAAiB;MAAAgE,QAAA,EACbH,gBAAgB,CAACC,GAAG,CAAC,CAACT,QAAQ,EAAEsB,KAAK,kBACtCjF,OAAA,CAACQ,IAAI;QAAamE,OAAO,EAAEA,CAAA,KAAMjB,oBAAoB,CAACC,QAAQ,CAAE;QAACiB,KAAK,EAAE;UAACG,WAAW,EAAE,MAAM;UAAEF,MAAM,EAAE,SAAS;UAAEG,GAAG,EAAE;QAAO,CAAE;QAAAV,QAAA,EAC1HjD,gBAAgB,KAAKsC,QAAQ,GAAI,GAAEA,QAAS,aAAY,GAAGA;MAAQ,GAD7DsB,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC,eAGpB1E,OAAA;MAAAsE,QAAA,EACCrD,KAAK,CAACmD,GAAG,CAAC,CAACF,IAAI,EAAEe,KAAK,kBACnBjF,OAAA;QAAAsE,QAAA,gBAEItE,OAAA;UAAI2E,OAAO,EAAEA,CAAA,KAAM/B,eAAe,CAACsB,IAAI,CAACgB,GAAG,CAAE;UAACN,KAAK,EAAE;YAACC,MAAM,EAAE;UAAS,CAAE;UAAAP,QAAA,EACxEJ,IAAI,CAACiB;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAGL1E,OAAA;UAAK4E,KAAK,EAAE;YAAEQ,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEC,QAAQ,EAAE,MAAM;YAAEC,UAAU,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAlB,QAAA,gBACvGtE,OAAA;YAAAsE,QAAA,EAAOJ,IAAI,CAACuB;UAAM;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B1E,OAAA;YAAK0F,GAAG,EAAExB,IAAI,CAACyB,gBAAiB;YAACC,GAAG,EAAC,kBAAkB;YAAChB,KAAK,EAAE;cAAEiB,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAM;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzH1E,OAAA;YAAM4E,KAAK,EAAE;cAAEoB,MAAM,EAAE,QAAQ;cAAET,UAAU,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAY,CAAE;YAAAlB,QAAA,EACrE,IAAIvC,IAAI,CAACmC,IAAI,CAAClC,SAAS,CAAC,CAACiE,kBAAkB,CAAC;UAAC;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN1E,OAAA;UAAAsE,QAAA,EAAKJ,IAAI,CAACgC;QAAO;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAGtBR,IAAI,CAACX,IAAI,CAACa,GAAG,CAAC,CAACrB,GAAG,EAAE+B,QAAQ,kBACzB9E,OAAA,CAACQ,IAAI;UAAgBmE,OAAO,EAAG3B,KAAK,IAAKF,cAAc,CAACC,GAAG,EAAEC,KAAK,CAAE;UAAC4B,KAAK,EAAE;YAACG,WAAW,EAAE,MAAM;YAAEF,MAAM,EAAE,SAAS;YAAEG,GAAG,EAAE;UAAO,CAAE;UAAAV,QAAA,GAAC,GACnI,EAACvB,GAAG;QAAA,GADM+B,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT,CAAC;MAAA,GAtBIO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAGlB,CAAC;AAAC9D,EAAA,CAvJID,YAAY;EAAA,QAM0Bf,eAAe,EAGtCD,WAAW;AAAA;AAAAwG,GAAA,GAT1BxF,YAAY;AAyJlB,eAAeA,YAAY;AAAC,IAAAR,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAyF,GAAA;AAAAC,YAAA,CAAAjG,EAAA;AAAAiG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAA7F,GAAA;AAAA6F,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}