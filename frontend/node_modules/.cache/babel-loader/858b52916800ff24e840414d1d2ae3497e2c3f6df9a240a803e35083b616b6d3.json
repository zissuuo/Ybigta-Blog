{"ast":null,"code":"/*\r\nLanguage: Processing\r\nDescription: Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\r\nAuthor: Erik Paluka <erik.paluka@gmail.com>\r\nWebsite: https://processing.org\r\nCategory: graphics\r\n*/\n\nfunction processing(hljs) {\n  return {\n    name: 'Processing',\n    keywords: {\n      keyword: 'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' + 'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' + 'Object StringDict StringList Table TableRow XML ' +\n      // Java keywords\n      'false synchronized int abstract float private char boolean static null if const ' + 'for true while long throw strictfp finally protected import native final return void ' + 'enum else break transient new catch instanceof byte super volatile case assert short ' + 'package default double public try this switch continue throws protected public private',\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',\n      title: 'setup draw',\n      built_in: 'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' + 'keyCode pixels focused frameCount frameRate height width ' + 'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' + 'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' + 'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' + 'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' + 'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' + 'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' + 'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' + 'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' + 'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' + 'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' + 'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' + 'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' + 'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' + 'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' + 'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' + 'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' + 'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' + 'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' + 'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' + 'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' + 'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' + 'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'\n    },\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n}\nmodule.exports = processing;","map":{"version":3,"names":["processing","hljs","name","keywords","keyword","literal","title","built_in","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","module","exports"],"sources":["E:/Documents/2024-1 YBIGTA/Ybigta_BLOG/blog_git/Ybigta-Blog/frontend/node_modules/highlight.js/lib/languages/processing.js"],"sourcesContent":["/*\r\nLanguage: Processing\r\nDescription: Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\r\nAuthor: Erik Paluka <erik.paluka@gmail.com>\r\nWebsite: https://processing.org\r\nCategory: graphics\r\n*/\r\n\r\nfunction processing(hljs) {\r\n  return {\r\n    name: 'Processing',\r\n    keywords: {\r\n      keyword: 'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' +\r\n        'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' +\r\n        'Object StringDict StringList Table TableRow XML ' +\r\n        // Java keywords\r\n        'false synchronized int abstract float private char boolean static null if const ' +\r\n        'for true while long throw strictfp finally protected import native final return void ' +\r\n        'enum else break transient new catch instanceof byte super volatile case assert short ' +\r\n        'package default double public try this switch continue throws protected public private',\r\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',\r\n      title: 'setup draw',\r\n      built_in: 'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' +\r\n        'keyCode pixels focused frameCount frameRate height width ' +\r\n        'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' +\r\n        'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' +\r\n        'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' +\r\n        'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' +\r\n        'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' +\r\n        'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' +\r\n        'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' +\r\n        'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' +\r\n        'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' +\r\n        'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' +\r\n        'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' +\r\n        'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' +\r\n        'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' +\r\n        'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' +\r\n        'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' +\r\n        'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' +\r\n        'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' +\r\n        'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' +\r\n        'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' +\r\n        'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' +\r\n        'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' +\r\n        'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'\r\n    },\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = processing;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAO;IACLC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE;MACRC,OAAO,EAAE,gFAAgF,GACvF,8FAA8F,GAC9F,kDAAkD;MAClD;MACA,kFAAkF,GAClF,uFAAuF,GACvF,uFAAuF,GACvF,wFAAwF;MAC1FC,OAAO,EAAE,0CAA0C;MACnDC,KAAK,EAAE,YAAY;MACnBC,QAAQ,EAAE,4EAA4E,GACpF,2DAA2D,GAC3D,oFAAoF,GACpF,gGAAgG,GAChG,+FAA+F,GAC/F,4FAA4F,GAC5F,0FAA0F,GAC1F,6FAA6F,GAC7F,+FAA+F,GAC/F,gGAAgG,GAChG,mGAAmG,GACnG,oGAAoG,GACpG,oGAAoG,GACpG,uGAAuG,GACvG,sGAAsG,GACtG,uGAAuG,GACvG,yGAAyG,GACzG,yGAAyG,GACzG,0GAA0G,GAC1G,0GAA0G,GAC1G,8GAA8G,GAC9G,2GAA2G,GAC3G,4GAA4G,GAC5G;IACJ,CAAC;IACDC,QAAQ,EAAE,CACRP,IAAI,CAACQ,mBAAmB,EACxBR,IAAI,CAACS,oBAAoB,EACzBT,IAAI,CAACU,gBAAgB,EACrBV,IAAI,CAACW,iBAAiB,EACtBX,IAAI,CAACY,aAAa;EAEtB,CAAC;AACH;AAEAC,MAAM,CAACC,OAAO,GAAGf,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}