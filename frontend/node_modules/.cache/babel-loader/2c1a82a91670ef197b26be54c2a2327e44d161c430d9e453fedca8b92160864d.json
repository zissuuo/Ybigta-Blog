{"ast":null,"code":"var _jsxFileName = \"/Users/kimjisu/Desktop/ybigblog/frontend/src/components/page/BlogListPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useEffect, useState } from 'react';\n\n/* 컴포넌트 임포트 */\nimport Button from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n_c = Wrapper;\nconst BlogListPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\n\n  useEffect(() => {\n    // 서버로부터 포스트 데이터를 가져옵니다.\n    fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\n    .then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, []);\n\n  /* 이동 */\n  const navigate = useNavigate();\n  const navigateTo = path => {\n    console.log(`${path} clicked!`);\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBE14\\uB85C\\uADF8 \\uBA54\\uC778/\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"return (\", /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uBE14\\uB85C\\uADF8 \\uBA54\\uC778/\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: \"10px\"\n              },\n              children: [\"f\", tag]\n            }, tagIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogListPage, \"4AchB6hynESKM+cEN+Cl8Cq5jQU=\", false, function () {\n  return [useNavigate];\n});\n_c2 = BlogListPage;\nexport default BlogListPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"BlogListPage\");","map":{"version":3,"names":["React","useNavigate","styled","createGlobalStyle","useEffect","useState","Button","jsxDEV","_jsxDEV","Wrapper","div","_c","BlogListPage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","log","navigate","navigateTo","path","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","title","tags","tag","tagIndex","style","marginRight","_c2","$RefreshReg$"],"sources":["/Users/kimjisu/Desktop/ybigblog/frontend/src/components/page/BlogListPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { useEffect, useState } from 'react';\n\n/* 컴포넌트 임포트 */\nimport Button from '../ui/Button';\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 40px;\n`;\n\n\nconst BlogListPage = () => {\n\n    const [posts, setPosts] = useState([]); // 서버로부터 받은 포스트들을 저장할 상태\n\n    useEffect(() => {\n      // 서버로부터 포스트 데이터를 가져옵니다.\n      fetch('http://localhost:8000/posts') // 이 URL은 예시이며, 실제 서버의 URL을 사용해야 합니다.\n        .then(response => response.json())\n        .then(data => setPosts(data))\n        .catch(error => console.log(error));\n    }, []);\n\n    /* 이동 */\n    const navigate = useNavigate();\n\n    const navigateTo = (path) => {\n        console.log(`${path} clicked!`);\n        navigate(path);\n      };\n\n\n    return (\n        <Wrapper>\n            <h1>블로그 메인/리스트 페이지</h1>\n            return (\n    <Wrapper>\n        <h1>블로그 메인/리스트 페이지</h1>\n        <div>\n            {posts.map((post, index) => (\n                <div key={index}>\n                    <h2>{post.title}</h2>\n                    {/* 각 포스트의 태그들을 렌더링 */}\n                    <div>\n                        {post.tags.map((tag, tagIndex) => (\n                            <span key={tagIndex} style={{marginRight: \"10px\"}}>\n                                f{tag}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    </Wrapper>\n);\n\n        </Wrapper>\n    );\n\n};\n\nexport default BlogListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}